//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-32267302
// Cuda compilation tools, release 12.0, V12.0.140
// Based on NVVM 7.0.1
//

.version 8.0
.target sm_86
.address_size 64

.extern .func free
(
	.param .b64 free_param_0
)
;
.const .align 8 .b8 d_midstate[200];
.const .align 8 .b8 d_target[8];
.const .align 1 .b8 g_ppi_aux[50] = {0, 0, 6, 44, 12, 43, 18, 21, 24, 14, 3, 28, 9, 20, 10, 3, 16, 45, 22, 61, 1, 1, 7, 6, 13, 25, 19, 8, 20, 18, 4, 27, 5, 36, 11, 10, 17, 15, 23, 56, 2, 62, 8, 55, 14, 39, 15, 41, 21, 2};
.const .align 1 .b8 g_ksi_aux[50] = {1, 2, 2, 3, 3, 4, 4, 0, 0, 1, 6, 7, 7, 8, 8, 9, 9, 5, 5, 6, 11, 12, 12, 13, 13, 14, 14, 10, 10, 11, 16, 17, 17, 18, 18, 19, 19, 15, 15, 16, 21, 22, 22, 23, 23, 24, 24, 20, 20, 21};
.const .align 8 .b8 g_iota_aux[192] = {1, 0, 0, 0, 0, 0, 0, 0, 130, 128, 0, 0, 0, 0, 0, 0, 138, 128, 0, 0, 0, 0, 0, 128, 0, 128, 0, 128, 0, 0, 0, 128, 139, 128, 0, 0, 0, 0, 0, 0, 1, 0, 0, 128, 0, 0, 0, 0, 129, 128, 0, 128, 0, 0, 0, 128, 9, 128, 0, 0, 0, 0, 0, 128, 138, 0, 0, 0, 0, 0, 0, 0, 136, 0, 0, 0, 0, 0, 0, 0, 9, 128, 0, 128, 0, 0, 0, 0, 10, 0, 0, 128, 0, 0, 0, 0, 139, 128, 0, 128, 0, 0, 0, 0, 139, 0, 0, 0, 0, 0, 0, 128, 137, 128, 0, 0, 0, 0, 0, 128, 3, 128, 0, 0, 0, 0, 0, 128, 2, 128, 0, 0, 0, 0, 0, 128, 128, 0, 0, 0, 0, 0, 0, 128, 10, 128, 0, 0, 0, 0, 0, 0, 10, 0, 0, 128, 0, 0, 0, 128, 129, 128, 0, 128, 0, 0, 0, 128, 128, 128, 0, 0, 0, 0, 0, 128, 1, 0, 0, 128, 0, 0, 0, 0, 8, 128, 0, 128, 0, 0, 0, 128};
// _ZZ18kernel_lilypad_powE12stateInBlock has been demoted
// _ZZ18kernel_lilypad_powE8cInBlock has been demoted
// _ZZ24kernel_lilypad_pow_debugE12stateInBlock has been demoted
// _ZZ24kernel_lilypad_pow_debugE8cInBlock has been demoted

.func _Z10addUint256P7nonce_tPKyy(
	.param .b64 _Z10addUint256P7nonce_tPKyy_param_0,
	.param .b64 _Z10addUint256P7nonce_tPKyy_param_1,
	.param .b64 _Z10addUint256P7nonce_tPKyy_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .b64 	%rd<17>;
	.loc	1 154 0


	ld.param.u64 	%rd1, [_Z10addUint256P7nonce_tPKyy_param_0];
	ld.param.u64 	%rd2, [_Z10addUint256P7nonce_tPKyy_param_1];
	ld.param.u64 	%rd3, [_Z10addUint256P7nonce_tPKyy_param_2];
	.loc	1 156 18
	cvta.to.local.u64 	%rd4, %rd1;
	cvta.to.global.u64 	%rd5, %rd2;
	ld.global.u64 	%rd6, [%rd5];
	add.s64 	%rd7, %rd6, %rd3;
	setp.lt.u64 	%p1, %rd7, %rd6;
	.loc	1 157 5
	st.local.u64 	[%rd4], %rd7;
	.loc	1 160 5
	selp.u64 	%rd8, 1, 0, %p1;
	.loc	1 162 9
	ld.global.u64 	%rd9, [%rd5+8];
	add.s64 	%rd10, %rd9, %rd8;
	setp.lt.u64 	%p2, %rd10, %rd9;
	.loc	1 163 9
	st.local.u64 	[%rd4+8], %rd10;
	.loc	1 160 5
	selp.u64 	%rd11, 1, 0, %p2;
	.loc	1 162 9
	ld.global.u64 	%rd12, [%rd5+16];
	add.s64 	%rd13, %rd12, %rd11;
	setp.lt.u64 	%p3, %rd13, %rd12;
	.loc	1 163 9
	st.local.u64 	[%rd4+16], %rd13;
	.loc	1 160 5
	selp.u64 	%rd14, 1, 0, %p3;
	.loc	1 162 9
	ld.global.u64 	%rd15, [%rd5+24];
	add.s64 	%rd16, %rd15, %rd14;
	.loc	1 163 9
	st.local.u64 	[%rd4+24], %rd16;
	.loc	1 166 1
	ret;

}
	// .globl	kernel_lilypad_pow
.visible .entry kernel_lilypad_pow(
	.param .u64 kernel_lilypad_pow_param_0,
	.param .u64 kernel_lilypad_pow_param_1,
	.param .u64 kernel_lilypad_pow_param_2,
	.param .u32 kernel_lilypad_pow_param_3,
	.param .u32 kernel_lilypad_pow_param_4,
	.param .u64 kernel_lilypad_pow_param_5
)
.maxntid 1024, 1, 1
{
	.local .align 16 .b8 	__local_depot1[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<37>;
	.reg .b16 	%rs<12>;
	.reg .b32 	%r<1394>;
	.reg .b64 	%rd<240>;
	.loc	1 171 0
	// demoted variable
	.shared .align 8 .b8 _ZZ18kernel_lilypad_powE12stateInBlock[6400];
	// demoted variable
	.shared .align 8 .b8 _ZZ18kernel_lilypad_powE8cInBlock[6400];

	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd41, [kernel_lilypad_pow_param_0];
	ld.param.u64 	%rd43, [kernel_lilypad_pow_param_2];
	ld.param.u32 	%r23, [kernel_lilypad_pow_param_3];
	ld.param.u32 	%r22, [kernel_lilypad_pow_param_4];
	ld.param.u64 	%rd44, [kernel_lilypad_pow_param_5];
	.loc	1 178 16
	mov.u32 	%r24, %ntid.x;
	mov.u32 	%r25, %ctaid.x;
	mov.u32 	%r1, %tid.x;
	mad.lo.s32 	%r2, %r25, %r24, %r1;
	.loc	1 179 5
	setp.ge.u32 	%p1, %r2, %r23;
	@%p1 bra 	$L__BB1_64;

	.loc	1 185 27
	shr.s32 	%r26, %r2, 31;
	shr.u32 	%r27, %r26, 27;
	add.s32 	%r28, %r2, %r27;
	and.b32  	%r29, %r28, -32;
	sub.s32 	%r3, %r2, %r29;
	.loc	1 186 5
	setp.gt.s32 	%p2, %r3, 24;
	@%p2 bra 	$L__BB1_64;

	.loc	1 184 25
	shr.s32 	%r33, %r28, 5;
	.loc	1 191 26
	shr.u32 	%r4, %r1, 5;
	.loc	1 201 5
	mov.u32 	%r34, _ZZ18kernel_lilypad_powE8cInBlock;
	mad.lo.s32 	%r35, %r4, 200, %r34;
	shl.b32 	%r36, %r3, 3;
	add.s32 	%r5, %r35, %r36;
	mov.u64 	%rd45, 0;
	st.shared.u64 	[%r5], %rd45;
	.loc	1 204 5
	.loc	2 110 3, function_name $L__info_string0, inlined_at 1 204 5
	bar.warp.sync 	-1;
	.loc	1 205 21
	mul.lo.s32 	%r1391, %r33, %r22;
	.loc	1 206 24
	add.s32 	%r7, %r1391, %r22;
	.loc	1 207 5
	setp.ge.s32 	%p3, %r1391, %r7;
	@%p3 bra 	$L__BB1_64;

	.loc	1 198 20
	mul.lo.s32 	%r37, %r4, 200;
	mov.u32 	%r38, _ZZ18kernel_lilypad_powE12stateInBlock;
	add.s32 	%r8, %r38, %r37;
	add.s32 	%r9, %r8, %r36;
	mul.hi.s32 	%r40, %r3, 1717986919;
	shr.u32 	%r41, %r40, 31;
	shr.s32 	%r42, %r40, 1;
	add.s32 	%r43, %r42, %r41;
	mul.lo.s32 	%r44, %r43, 5;
	sub.s32 	%r10, %r3, %r44;
	add.s32 	%r46, %r34, %r37;
	shl.b32 	%r47, %r10, 3;
	add.s32 	%r11, %r46, %r47;
	mul.wide.s32 	%rd46, %r3, 2;
	mov.u64 	%rd47, g_ppi_aux;
	add.s64 	%rd1, %rd47, %rd46;
	mov.u64 	%rd48, g_ksi_aux;
	add.s64 	%rd2, %rd48, %rd46;
	ld.const.u64 	%rd23, [g_iota_aux+160];
	ld.const.u64 	%rd24, [g_iota_aux+168];
	ld.const.u64 	%rd25, [g_iota_aux+176];
	ld.const.u64 	%rd26, [g_iota_aux+184];
	cvta.to.global.u64 	%rd28, %rd41;
	ld.const.u8 	%rs5, [%rd1];
	ld.const.u8 	%rs6, [%rd1+1];
	ld.const.u8 	%rs7, [%rd2];
	ld.const.u8 	%rs8, [%rd2+1];
	cvta.to.global.u64 	%rd36, %rd43;
	cvta.to.global.u64 	%rd37, %rd44;

$L__BB1_4:
	.loc	1 211 9
	mov.u64 	%rd237, 0;
	st.shared.u64 	[%r9], %rd237;
	setp.ne.s32 	%p4, %r3, 0;
	.loc	1 212 9
	@%p4 bra 	$L__BB1_10;

	.loc	1 198 20
	mov.u32 	%r1390, _ZZ18kernel_lilypad_powE12stateInBlock;
	ld.param.u64 	%rd216, [kernel_lilypad_pow_param_1];
	.loc	1 215 13
	cvt.s64.s32 	%rd51, %r1391;
	mov.u32 	%r1392, 0;
	add.u64 	%rd52, %SP, 0;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd52;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd216;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd51;
	call.uni 
	_Z10addUint256P7nonce_tPKyy, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 0
	.loc	1 198 20
	mad.lo.s32 	%r52, %r4, 200, %r1390;
	.loc	1 212 9
	cvt.u64.u32 	%rd27, %r52;

$L__BB1_6:
	.loc	1 0 9
	add.s64 	%rd53, %rd28, %rd237;
	ld.global.nc.u8 	%rs3, [%rd53];
	add.s64 	%rd54, %rd27, %rd237;
	cvt.u32.u64 	%r53, %rd54;
	st.shared.u8 	[%r53], %rs3;
	add.s64 	%rd237, %rd237, 1;
	add.s32 	%r1392, %r1392, 1;
	setp.lt.u32 	%p5, %r1392, 32;
	@%p5 bra 	$L__BB1_6;

	.loc	1 178 16
	cvta.to.local.u64 	%rd31, %rd52;
	mov.u64 	%rd238, 0;

$L__BB1_8:
	.loc	1 0 16
	add.s64 	%rd57, %rd31, %rd238;
	ld.local.u8 	%rs4, [%rd57];
	cvt.u32.u64 	%r54, %rd238;
	add.s32 	%r55, %r8, %r54;
	st.shared.u8 	[%r55+32], %rs4;
	add.s64 	%rd238, %rd238, 1;
	setp.lt.u64 	%p6, %rd238, 32;
	@%p6 bra 	$L__BB1_8;

	.loc	1 219 13
	ld.shared.u64 	%rd58, [%r8+64];
	xor.b64  	%rd59, %rd58, 1;
	st.shared.u64 	[%r8+64], %rd59;
	.loc	1 220 13
	ld.shared.u64 	%rd60, [%r8+128];
	xor.b64  	%rd61, %rd60, -9223372036854775808;
	st.shared.u64 	[%r8+128], %rd61;

$L__BB1_10:
	.loc	1 191 26
	add.s32 	%r15, %r8, %r47;
	.loc	1 224 9
	.loc	2 110 3, function_name $L__info_string0, inlined_at 1 224 9
	bar.warp.sync 	-1;
	.loc	1 225 9
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r95, %r96}, [%r15];
	mov.u32 	%r70, 1;
	ld.shared.v2.u32 	{%r97, %r98}, [%r15+40];
	ld.shared.v2.u32 	{%r99, %r100}, [%r15+80];
	ld.shared.v2.u32 	{%r101, %r102}, [%r15+120];
	ld.shared.v2.u32 	{%r103, %r104}, [%r15+160];
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r56, %r95, %r97, %r99, 0x96;  lop3.b32 %r57, %r96, %r98, %r100, 0x96;  lop3.b32 %r56, %r56, %r101, %r103, 0x96;  lop3.b32 %r57, %r57, %r102, %r104, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r56, %r57};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r105, %r106}, [%r9];
	ld.shared.v2.u32 	{%r107, %r108}, [%r11+32];
	ld.shared.v2.u32 	{%r68, %r69}, [%r11+8];
	.loc	1 122 73, function_name $L__info_string1, inlined_at 1 225 9
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r69, %r68, %r70;  shf.l.wrap.b32 %r69, %r68, %r69, %r70;  mov.b32 %r68, tmp;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r73, %r105, %r107, %r68, 0x96;  lop3.b32 %r74, %r106, %r108, %r69, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r73, %r74};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	mul.wide.u16 	%r111, %rs5, 8;
	add.s32 	%r16, %r8, %r111;
	cvt.u64.u16 	%rd62, %rs6;
	and.b64  	%rd34, %rd62, 255;
	ld.shared.u64 	%rd63, [%r16];
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	cvt.u32.u16 	%r112, %rs6;
	and.b32  	%r113, %r112, 255;
	shl.b64 	%rd64, %rd63, %r113;
	mov.u64 	%rd65, 64;
	sub.s64 	%rd66, %rd65, %rd34;
	and.b64  	%rd35, %rd66, 4294967295;
	cvt.u32.u64 	%r114, %rd66;
	shr.u64 	%rd67, %rd63, %r114;
	or.b64  	%rd68, %rd67, %rd64;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd68;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	mul.wide.u16 	%r117, %rs7, 8;
	add.s32 	%r17, %r46, %r117;
	mul.wide.u16 	%r118, %rs8, 8;
	add.s32 	%r18, %r46, %r118;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r83, %r84}, %rd68;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r119, %r120}, [%r17];
	ld.shared.v2.u32 	{%r121, %r122}, [%r18];
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r81, %r83, %r119, %r121, 0xD2;  lop3.b32 %r82, %r84, %r120, %r122, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r81, %r82};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_12;

	.loc	1 0 9
	ld.const.u64 	%rd228, [g_iota_aux];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd69, [%r8];
	xor.b64  	%rd70, %rd69, %rd228;
	st.shared.u64 	[%r8], %rd70;

$L__BB1_12:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r156, %r157}, [%r15];
	ld.shared.v2.u32 	{%r158, %r159}, [%r15+40];
	ld.shared.v2.u32 	{%r160, %r161}, [%r15+80];
	ld.shared.v2.u32 	{%r162, %r163}, [%r15+120];
	ld.shared.v2.u32 	{%r164, %r165}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r123, %r156, %r158, %r160, 0x96;  lop3.b32 %r124, %r157, %r159, %r161, 0x96;  lop3.b32 %r123, %r123, %r162, %r164, 0x96;  lop3.b32 %r124, %r124, %r163, %r165, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r123, %r124};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r166, %r167}, [%r9];
	ld.shared.v2.u32 	{%r168, %r169}, [%r11+32];
	ld.shared.v2.u32 	{%r135, %r136}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r136, %r135, %r70;  shf.l.wrap.b32 %r136, %r135, %r136, %r70;  mov.b32 %r135, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r140, %r166, %r168, %r135, 0x96;  lop3.b32 %r141, %r167, %r169, %r136, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r140, %r141};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd71, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	cvt.u32.u64 	%r172, %rd34;
	shl.b64 	%rd72, %rd71, %r172;
	cvt.u32.u64 	%r173, %rd35;
	shr.u64 	%rd73, %rd71, %r173;
	or.b64  	%rd74, %rd73, %rd72;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd74;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r150, %r151}, %rd74;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r174, %r175}, [%r17];
	ld.shared.v2.u32 	{%r176, %r177}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r148, %r150, %r174, %r176, 0xD2;  lop3.b32 %r149, %r151, %r175, %r177, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r148, %r149};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_14;

	.loc	1 0 9
	ld.const.u64 	%rd227, [g_iota_aux+8];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd75, [%r8];
	xor.b64  	%rd76, %rd75, %rd227;
	st.shared.u64 	[%r8], %rd76;

$L__BB1_14:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r211, %r212}, [%r15];
	mov.u32 	%r192, 1;
	ld.shared.v2.u32 	{%r213, %r214}, [%r15+40];
	ld.shared.v2.u32 	{%r215, %r216}, [%r15+80];
	ld.shared.v2.u32 	{%r217, %r218}, [%r15+120];
	ld.shared.v2.u32 	{%r219, %r220}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r178, %r211, %r213, %r215, 0x96;  lop3.b32 %r179, %r212, %r214, %r216, 0x96;  lop3.b32 %r178, %r178, %r217, %r219, 0x96;  lop3.b32 %r179, %r179, %r218, %r220, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r178, %r179};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r221, %r222}, [%r9];
	ld.shared.v2.u32 	{%r223, %r224}, [%r11+32];
	ld.shared.v2.u32 	{%r190, %r191}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r191, %r190, %r192;  shf.l.wrap.b32 %r191, %r190, %r191, %r192;  mov.b32 %r190, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r195, %r221, %r223, %r190, 0x96;  lop3.b32 %r196, %r222, %r224, %r191, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r195, %r196};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd77, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd78, %rd77, %r172;
	shr.u64 	%rd79, %rd77, %r173;
	or.b64  	%rd80, %rd79, %rd78;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd80;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r205, %r206}, %rd80;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r229, %r230}, [%r17];
	ld.shared.v2.u32 	{%r231, %r232}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r203, %r205, %r229, %r231, 0xD2;  lop3.b32 %r204, %r206, %r230, %r232, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r203, %r204};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_16;

	.loc	1 0 9
	ld.const.u64 	%rd226, [g_iota_aux+16];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd81, [%r8];
	xor.b64  	%rd82, %rd81, %rd226;
	st.shared.u64 	[%r8], %rd82;

$L__BB1_16:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r266, %r267}, [%r15];
	ld.shared.v2.u32 	{%r268, %r269}, [%r15+40];
	ld.shared.v2.u32 	{%r270, %r271}, [%r15+80];
	ld.shared.v2.u32 	{%r272, %r273}, [%r15+120];
	ld.shared.v2.u32 	{%r274, %r275}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r233, %r266, %r268, %r270, 0x96;  lop3.b32 %r234, %r267, %r269, %r271, 0x96;  lop3.b32 %r233, %r233, %r272, %r274, 0x96;  lop3.b32 %r234, %r234, %r273, %r275, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r233, %r234};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r276, %r277}, [%r9];
	ld.shared.v2.u32 	{%r278, %r279}, [%r11+32];
	ld.shared.v2.u32 	{%r245, %r246}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r246, %r245, %r192;  shf.l.wrap.b32 %r246, %r245, %r246, %r192;  mov.b32 %r245, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r250, %r276, %r278, %r245, 0x96;  lop3.b32 %r251, %r277, %r279, %r246, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r250, %r251};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd83, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd84, %rd83, %r172;
	shr.u64 	%rd85, %rd83, %r173;
	or.b64  	%rd86, %rd85, %rd84;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd86;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r260, %r261}, %rd86;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r284, %r285}, [%r17];
	ld.shared.v2.u32 	{%r286, %r287}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r258, %r260, %r284, %r286, 0xD2;  lop3.b32 %r259, %r261, %r285, %r287, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r258, %r259};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_18;

	.loc	1 0 9
	ld.const.u64 	%rd225, [g_iota_aux+24];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd87, [%r8];
	xor.b64  	%rd88, %rd87, %rd225;
	st.shared.u64 	[%r8], %rd88;

$L__BB1_18:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r321, %r322}, [%r15];
	mov.u32 	%r302, 1;
	ld.shared.v2.u32 	{%r323, %r324}, [%r15+40];
	ld.shared.v2.u32 	{%r325, %r326}, [%r15+80];
	ld.shared.v2.u32 	{%r327, %r328}, [%r15+120];
	ld.shared.v2.u32 	{%r329, %r330}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r288, %r321, %r323, %r325, 0x96;  lop3.b32 %r289, %r322, %r324, %r326, 0x96;  lop3.b32 %r288, %r288, %r327, %r329, 0x96;  lop3.b32 %r289, %r289, %r328, %r330, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r288, %r289};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r331, %r332}, [%r9];
	ld.shared.v2.u32 	{%r333, %r334}, [%r11+32];
	ld.shared.v2.u32 	{%r300, %r301}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r301, %r300, %r302;  shf.l.wrap.b32 %r301, %r300, %r301, %r302;  mov.b32 %r300, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r305, %r331, %r333, %r300, 0x96;  lop3.b32 %r306, %r332, %r334, %r301, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r305, %r306};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd89, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd90, %rd89, %r172;
	shr.u64 	%rd91, %rd89, %r173;
	or.b64  	%rd92, %rd91, %rd90;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd92;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r315, %r316}, %rd92;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r339, %r340}, [%r17];
	ld.shared.v2.u32 	{%r341, %r342}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r313, %r315, %r339, %r341, 0xD2;  lop3.b32 %r314, %r316, %r340, %r342, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r313, %r314};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_20;

	.loc	1 0 9
	ld.const.u64 	%rd224, [g_iota_aux+32];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd93, [%r8];
	xor.b64  	%rd94, %rd93, %rd224;
	st.shared.u64 	[%r8], %rd94;

$L__BB1_20:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r376, %r377}, [%r15];
	ld.shared.v2.u32 	{%r378, %r379}, [%r15+40];
	ld.shared.v2.u32 	{%r380, %r381}, [%r15+80];
	ld.shared.v2.u32 	{%r382, %r383}, [%r15+120];
	ld.shared.v2.u32 	{%r384, %r385}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r343, %r376, %r378, %r380, 0x96;  lop3.b32 %r344, %r377, %r379, %r381, 0x96;  lop3.b32 %r343, %r343, %r382, %r384, 0x96;  lop3.b32 %r344, %r344, %r383, %r385, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r343, %r344};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r386, %r387}, [%r9];
	ld.shared.v2.u32 	{%r388, %r389}, [%r11+32];
	ld.shared.v2.u32 	{%r355, %r356}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r356, %r355, %r302;  shf.l.wrap.b32 %r356, %r355, %r356, %r302;  mov.b32 %r355, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r360, %r386, %r388, %r355, 0x96;  lop3.b32 %r361, %r387, %r389, %r356, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r360, %r361};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd95, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd96, %rd95, %r172;
	shr.u64 	%rd97, %rd95, %r173;
	or.b64  	%rd98, %rd97, %rd96;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd98;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r370, %r371}, %rd98;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r394, %r395}, [%r17];
	ld.shared.v2.u32 	{%r396, %r397}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r368, %r370, %r394, %r396, 0xD2;  lop3.b32 %r369, %r371, %r395, %r397, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r368, %r369};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_22;

	.loc	1 0 9
	ld.const.u64 	%rd223, [g_iota_aux+40];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd99, [%r8];
	xor.b64  	%rd100, %rd99, %rd223;
	st.shared.u64 	[%r8], %rd100;

$L__BB1_22:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r431, %r432}, [%r15];
	mov.u32 	%r412, 1;
	ld.shared.v2.u32 	{%r433, %r434}, [%r15+40];
	ld.shared.v2.u32 	{%r435, %r436}, [%r15+80];
	ld.shared.v2.u32 	{%r437, %r438}, [%r15+120];
	ld.shared.v2.u32 	{%r439, %r440}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r398, %r431, %r433, %r435, 0x96;  lop3.b32 %r399, %r432, %r434, %r436, 0x96;  lop3.b32 %r398, %r398, %r437, %r439, 0x96;  lop3.b32 %r399, %r399, %r438, %r440, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r398, %r399};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r441, %r442}, [%r9];
	ld.shared.v2.u32 	{%r443, %r444}, [%r11+32];
	ld.shared.v2.u32 	{%r410, %r411}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r411, %r410, %r412;  shf.l.wrap.b32 %r411, %r410, %r411, %r412;  mov.b32 %r410, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r415, %r441, %r443, %r410, 0x96;  lop3.b32 %r416, %r442, %r444, %r411, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r415, %r416};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd101, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd102, %rd101, %r172;
	shr.u64 	%rd103, %rd101, %r173;
	or.b64  	%rd104, %rd103, %rd102;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd104;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r425, %r426}, %rd104;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r449, %r450}, [%r17];
	ld.shared.v2.u32 	{%r451, %r452}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r423, %r425, %r449, %r451, 0xD2;  lop3.b32 %r424, %r426, %r450, %r452, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r423, %r424};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_24;

	.loc	1 0 9
	ld.const.u64 	%rd222, [g_iota_aux+48];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd105, [%r8];
	xor.b64  	%rd106, %rd105, %rd222;
	st.shared.u64 	[%r8], %rd106;

$L__BB1_24:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r486, %r487}, [%r15];
	ld.shared.v2.u32 	{%r488, %r489}, [%r15+40];
	ld.shared.v2.u32 	{%r490, %r491}, [%r15+80];
	ld.shared.v2.u32 	{%r492, %r493}, [%r15+120];
	ld.shared.v2.u32 	{%r494, %r495}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r453, %r486, %r488, %r490, 0x96;  lop3.b32 %r454, %r487, %r489, %r491, 0x96;  lop3.b32 %r453, %r453, %r492, %r494, 0x96;  lop3.b32 %r454, %r454, %r493, %r495, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r453, %r454};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r496, %r497}, [%r9];
	ld.shared.v2.u32 	{%r498, %r499}, [%r11+32];
	ld.shared.v2.u32 	{%r465, %r466}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r466, %r465, %r412;  shf.l.wrap.b32 %r466, %r465, %r466, %r412;  mov.b32 %r465, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r470, %r496, %r498, %r465, 0x96;  lop3.b32 %r471, %r497, %r499, %r466, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r470, %r471};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd107, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd108, %rd107, %r172;
	shr.u64 	%rd109, %rd107, %r173;
	or.b64  	%rd110, %rd109, %rd108;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd110;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r480, %r481}, %rd110;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r504, %r505}, [%r17];
	ld.shared.v2.u32 	{%r506, %r507}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r478, %r480, %r504, %r506, 0xD2;  lop3.b32 %r479, %r481, %r505, %r507, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r478, %r479};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_26;

	.loc	1 0 9
	ld.const.u64 	%rd221, [g_iota_aux+56];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd111, [%r8];
	xor.b64  	%rd112, %rd111, %rd221;
	st.shared.u64 	[%r8], %rd112;

$L__BB1_26:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r541, %r542}, [%r15];
	mov.u32 	%r522, 1;
	ld.shared.v2.u32 	{%r543, %r544}, [%r15+40];
	ld.shared.v2.u32 	{%r545, %r546}, [%r15+80];
	ld.shared.v2.u32 	{%r547, %r548}, [%r15+120];
	ld.shared.v2.u32 	{%r549, %r550}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r508, %r541, %r543, %r545, 0x96;  lop3.b32 %r509, %r542, %r544, %r546, 0x96;  lop3.b32 %r508, %r508, %r547, %r549, 0x96;  lop3.b32 %r509, %r509, %r548, %r550, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r508, %r509};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r551, %r552}, [%r9];
	ld.shared.v2.u32 	{%r553, %r554}, [%r11+32];
	ld.shared.v2.u32 	{%r520, %r521}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r521, %r520, %r522;  shf.l.wrap.b32 %r521, %r520, %r521, %r522;  mov.b32 %r520, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r525, %r551, %r553, %r520, 0x96;  lop3.b32 %r526, %r552, %r554, %r521, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r525, %r526};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd113, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd114, %rd113, %r172;
	shr.u64 	%rd115, %rd113, %r173;
	or.b64  	%rd116, %rd115, %rd114;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd116;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r535, %r536}, %rd116;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r559, %r560}, [%r17];
	ld.shared.v2.u32 	{%r561, %r562}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r533, %r535, %r559, %r561, 0xD2;  lop3.b32 %r534, %r536, %r560, %r562, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r533, %r534};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_28;

	.loc	1 0 9
	ld.const.u64 	%rd220, [g_iota_aux+64];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd117, [%r8];
	xor.b64  	%rd118, %rd117, %rd220;
	st.shared.u64 	[%r8], %rd118;

$L__BB1_28:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r596, %r597}, [%r15];
	ld.shared.v2.u32 	{%r598, %r599}, [%r15+40];
	ld.shared.v2.u32 	{%r600, %r601}, [%r15+80];
	ld.shared.v2.u32 	{%r602, %r603}, [%r15+120];
	ld.shared.v2.u32 	{%r604, %r605}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r563, %r596, %r598, %r600, 0x96;  lop3.b32 %r564, %r597, %r599, %r601, 0x96;  lop3.b32 %r563, %r563, %r602, %r604, 0x96;  lop3.b32 %r564, %r564, %r603, %r605, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r563, %r564};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r606, %r607}, [%r9];
	ld.shared.v2.u32 	{%r608, %r609}, [%r11+32];
	ld.shared.v2.u32 	{%r575, %r576}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r576, %r575, %r522;  shf.l.wrap.b32 %r576, %r575, %r576, %r522;  mov.b32 %r575, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r580, %r606, %r608, %r575, 0x96;  lop3.b32 %r581, %r607, %r609, %r576, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r580, %r581};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd119, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd120, %rd119, %r172;
	shr.u64 	%rd121, %rd119, %r173;
	or.b64  	%rd122, %rd121, %rd120;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd122;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r590, %r591}, %rd122;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r614, %r615}, [%r17];
	ld.shared.v2.u32 	{%r616, %r617}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r588, %r590, %r614, %r616, 0xD2;  lop3.b32 %r589, %r591, %r615, %r617, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r588, %r589};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_30;

	.loc	1 0 9
	ld.const.u64 	%rd219, [g_iota_aux+72];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd123, [%r8];
	xor.b64  	%rd124, %rd123, %rd219;
	st.shared.u64 	[%r8], %rd124;

$L__BB1_30:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r651, %r652}, [%r15];
	mov.u32 	%r632, 1;
	ld.shared.v2.u32 	{%r653, %r654}, [%r15+40];
	ld.shared.v2.u32 	{%r655, %r656}, [%r15+80];
	ld.shared.v2.u32 	{%r657, %r658}, [%r15+120];
	ld.shared.v2.u32 	{%r659, %r660}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r618, %r651, %r653, %r655, 0x96;  lop3.b32 %r619, %r652, %r654, %r656, 0x96;  lop3.b32 %r618, %r618, %r657, %r659, 0x96;  lop3.b32 %r619, %r619, %r658, %r660, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r618, %r619};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r661, %r662}, [%r9];
	ld.shared.v2.u32 	{%r663, %r664}, [%r11+32];
	ld.shared.v2.u32 	{%r630, %r631}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r631, %r630, %r632;  shf.l.wrap.b32 %r631, %r630, %r631, %r632;  mov.b32 %r630, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r635, %r661, %r663, %r630, 0x96;  lop3.b32 %r636, %r662, %r664, %r631, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r635, %r636};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd125, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd126, %rd125, %r172;
	shr.u64 	%rd127, %rd125, %r173;
	or.b64  	%rd128, %rd127, %rd126;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd128;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r645, %r646}, %rd128;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r669, %r670}, [%r17];
	ld.shared.v2.u32 	{%r671, %r672}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r643, %r645, %r669, %r671, 0xD2;  lop3.b32 %r644, %r646, %r670, %r672, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r643, %r644};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_32;

	.loc	1 0 9
	ld.const.u64 	%rd218, [g_iota_aux+80];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd129, [%r8];
	xor.b64  	%rd130, %rd129, %rd218;
	st.shared.u64 	[%r8], %rd130;

$L__BB1_32:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r706, %r707}, [%r15];
	ld.shared.v2.u32 	{%r708, %r709}, [%r15+40];
	ld.shared.v2.u32 	{%r710, %r711}, [%r15+80];
	ld.shared.v2.u32 	{%r712, %r713}, [%r15+120];
	ld.shared.v2.u32 	{%r714, %r715}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r673, %r706, %r708, %r710, 0x96;  lop3.b32 %r674, %r707, %r709, %r711, 0x96;  lop3.b32 %r673, %r673, %r712, %r714, 0x96;  lop3.b32 %r674, %r674, %r713, %r715, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r673, %r674};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r716, %r717}, [%r9];
	ld.shared.v2.u32 	{%r718, %r719}, [%r11+32];
	ld.shared.v2.u32 	{%r685, %r686}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r686, %r685, %r632;  shf.l.wrap.b32 %r686, %r685, %r686, %r632;  mov.b32 %r685, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r690, %r716, %r718, %r685, 0x96;  lop3.b32 %r691, %r717, %r719, %r686, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r690, %r691};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd131, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd132, %rd131, %r172;
	shr.u64 	%rd133, %rd131, %r173;
	or.b64  	%rd134, %rd133, %rd132;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd134;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r700, %r701}, %rd134;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r724, %r725}, [%r17];
	ld.shared.v2.u32 	{%r726, %r727}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r698, %r700, %r724, %r726, 0xD2;  lop3.b32 %r699, %r701, %r725, %r727, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r698, %r699};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_34;

	.loc	1 0 9
	ld.const.u64 	%rd217, [g_iota_aux+88];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd135, [%r8];
	xor.b64  	%rd136, %rd135, %rd217;
	st.shared.u64 	[%r8], %rd136;

$L__BB1_34:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r761, %r762}, [%r15];
	mov.u32 	%r742, 1;
	ld.shared.v2.u32 	{%r763, %r764}, [%r15+40];
	ld.shared.v2.u32 	{%r765, %r766}, [%r15+80];
	ld.shared.v2.u32 	{%r767, %r768}, [%r15+120];
	ld.shared.v2.u32 	{%r769, %r770}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r728, %r761, %r763, %r765, 0x96;  lop3.b32 %r729, %r762, %r764, %r766, 0x96;  lop3.b32 %r728, %r728, %r767, %r769, 0x96;  lop3.b32 %r729, %r729, %r768, %r770, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r728, %r729};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r771, %r772}, [%r9];
	ld.shared.v2.u32 	{%r773, %r774}, [%r11+32];
	ld.shared.v2.u32 	{%r740, %r741}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r741, %r740, %r742;  shf.l.wrap.b32 %r741, %r740, %r741, %r742;  mov.b32 %r740, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r745, %r771, %r773, %r740, 0x96;  lop3.b32 %r746, %r772, %r774, %r741, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r745, %r746};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd137, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd138, %rd137, %r172;
	shr.u64 	%rd139, %rd137, %r173;
	or.b64  	%rd140, %rd139, %rd138;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd140;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r755, %r756}, %rd140;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r779, %r780}, [%r17];
	ld.shared.v2.u32 	{%r781, %r782}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r753, %r755, %r779, %r781, 0xD2;  lop3.b32 %r754, %r756, %r780, %r782, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r753, %r754};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_36;

	.loc	1 0 9
	ld.const.u64 	%rd229, [g_iota_aux+96];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd141, [%r8];
	xor.b64  	%rd142, %rd141, %rd229;
	st.shared.u64 	[%r8], %rd142;

$L__BB1_36:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r816, %r817}, [%r15];
	ld.shared.v2.u32 	{%r818, %r819}, [%r15+40];
	ld.shared.v2.u32 	{%r820, %r821}, [%r15+80];
	ld.shared.v2.u32 	{%r822, %r823}, [%r15+120];
	ld.shared.v2.u32 	{%r824, %r825}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r783, %r816, %r818, %r820, 0x96;  lop3.b32 %r784, %r817, %r819, %r821, 0x96;  lop3.b32 %r783, %r783, %r822, %r824, 0x96;  lop3.b32 %r784, %r784, %r823, %r825, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r783, %r784};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r826, %r827}, [%r9];
	ld.shared.v2.u32 	{%r828, %r829}, [%r11+32];
	ld.shared.v2.u32 	{%r795, %r796}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r796, %r795, %r742;  shf.l.wrap.b32 %r796, %r795, %r796, %r742;  mov.b32 %r795, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r800, %r826, %r828, %r795, 0x96;  lop3.b32 %r801, %r827, %r829, %r796, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r800, %r801};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd143, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd144, %rd143, %r172;
	shr.u64 	%rd145, %rd143, %r173;
	or.b64  	%rd146, %rd145, %rd144;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd146;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r810, %r811}, %rd146;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r834, %r835}, [%r17];
	ld.shared.v2.u32 	{%r836, %r837}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r808, %r810, %r834, %r836, 0xD2;  lop3.b32 %r809, %r811, %r835, %r837, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r808, %r809};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_38;

	.loc	1 0 9
	ld.const.u64 	%rd232, [g_iota_aux+104];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd147, [%r8];
	xor.b64  	%rd148, %rd147, %rd232;
	st.shared.u64 	[%r8], %rd148;

$L__BB1_38:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r871, %r872}, [%r15];
	mov.u32 	%r852, 1;
	ld.shared.v2.u32 	{%r873, %r874}, [%r15+40];
	ld.shared.v2.u32 	{%r875, %r876}, [%r15+80];
	ld.shared.v2.u32 	{%r877, %r878}, [%r15+120];
	ld.shared.v2.u32 	{%r879, %r880}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r838, %r871, %r873, %r875, 0x96;  lop3.b32 %r839, %r872, %r874, %r876, 0x96;  lop3.b32 %r838, %r838, %r877, %r879, 0x96;  lop3.b32 %r839, %r839, %r878, %r880, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r838, %r839};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r881, %r882}, [%r9];
	ld.shared.v2.u32 	{%r883, %r884}, [%r11+32];
	ld.shared.v2.u32 	{%r850, %r851}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r851, %r850, %r852;  shf.l.wrap.b32 %r851, %r850, %r851, %r852;  mov.b32 %r850, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r855, %r881, %r883, %r850, 0x96;  lop3.b32 %r856, %r882, %r884, %r851, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r855, %r856};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd149, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd150, %rd149, %r172;
	shr.u64 	%rd151, %rd149, %r173;
	or.b64  	%rd152, %rd151, %rd150;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd152;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r865, %r866}, %rd152;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r889, %r890}, [%r17];
	ld.shared.v2.u32 	{%r891, %r892}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r863, %r865, %r889, %r891, 0xD2;  lop3.b32 %r864, %r866, %r890, %r892, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r863, %r864};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_40;

	.loc	1 0 9
	ld.const.u64 	%rd231, [g_iota_aux+112];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd153, [%r8];
	xor.b64  	%rd154, %rd153, %rd231;
	st.shared.u64 	[%r8], %rd154;

$L__BB1_40:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r926, %r927}, [%r15];
	ld.shared.v2.u32 	{%r928, %r929}, [%r15+40];
	ld.shared.v2.u32 	{%r930, %r931}, [%r15+80];
	ld.shared.v2.u32 	{%r932, %r933}, [%r15+120];
	ld.shared.v2.u32 	{%r934, %r935}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r893, %r926, %r928, %r930, 0x96;  lop3.b32 %r894, %r927, %r929, %r931, 0x96;  lop3.b32 %r893, %r893, %r932, %r934, 0x96;  lop3.b32 %r894, %r894, %r933, %r935, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r893, %r894};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r936, %r937}, [%r9];
	ld.shared.v2.u32 	{%r938, %r939}, [%r11+32];
	ld.shared.v2.u32 	{%r905, %r906}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r906, %r905, %r852;  shf.l.wrap.b32 %r906, %r905, %r906, %r852;  mov.b32 %r905, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r910, %r936, %r938, %r905, 0x96;  lop3.b32 %r911, %r937, %r939, %r906, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r910, %r911};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd155, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd156, %rd155, %r172;
	shr.u64 	%rd157, %rd155, %r173;
	or.b64  	%rd158, %rd157, %rd156;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd158;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r920, %r921}, %rd158;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r944, %r945}, [%r17];
	ld.shared.v2.u32 	{%r946, %r947}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r918, %r920, %r944, %r946, 0xD2;  lop3.b32 %r919, %r921, %r945, %r947, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r918, %r919};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_42;

	.loc	1 0 9
	ld.const.u64 	%rd230, [g_iota_aux+120];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd159, [%r8];
	xor.b64  	%rd160, %rd159, %rd230;
	st.shared.u64 	[%r8], %rd160;

$L__BB1_42:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r981, %r982}, [%r15];
	mov.u32 	%r962, 1;
	ld.shared.v2.u32 	{%r983, %r984}, [%r15+40];
	ld.shared.v2.u32 	{%r985, %r986}, [%r15+80];
	ld.shared.v2.u32 	{%r987, %r988}, [%r15+120];
	ld.shared.v2.u32 	{%r989, %r990}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r948, %r981, %r983, %r985, 0x96;  lop3.b32 %r949, %r982, %r984, %r986, 0x96;  lop3.b32 %r948, %r948, %r987, %r989, 0x96;  lop3.b32 %r949, %r949, %r988, %r990, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r948, %r949};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r991, %r992}, [%r9];
	ld.shared.v2.u32 	{%r993, %r994}, [%r11+32];
	ld.shared.v2.u32 	{%r960, %r961}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r961, %r960, %r962;  shf.l.wrap.b32 %r961, %r960, %r961, %r962;  mov.b32 %r960, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r965, %r991, %r993, %r960, 0x96;  lop3.b32 %r966, %r992, %r994, %r961, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r965, %r966};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd161, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd162, %rd161, %r172;
	shr.u64 	%rd163, %rd161, %r173;
	or.b64  	%rd164, %rd163, %rd162;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd164;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r975, %r976}, %rd164;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r999, %r1000}, [%r17];
	ld.shared.v2.u32 	{%r1001, %r1002}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r973, %r975, %r999, %r1001, 0xD2;  lop3.b32 %r974, %r976, %r1000, %r1002, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r973, %r974};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_44;

	.loc	1 0 9
	ld.const.u64 	%rd234, [g_iota_aux+128];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd165, [%r8];
	xor.b64  	%rd166, %rd165, %rd234;
	st.shared.u64 	[%r8], %rd166;

$L__BB1_44:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r1036, %r1037}, [%r15];
	ld.shared.v2.u32 	{%r1038, %r1039}, [%r15+40];
	ld.shared.v2.u32 	{%r1040, %r1041}, [%r15+80];
	ld.shared.v2.u32 	{%r1042, %r1043}, [%r15+120];
	ld.shared.v2.u32 	{%r1044, %r1045}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r1003, %r1036, %r1038, %r1040, 0x96;  lop3.b32 %r1004, %r1037, %r1039, %r1041, 0x96;  lop3.b32 %r1003, %r1003, %r1042, %r1044, 0x96;  lop3.b32 %r1004, %r1004, %r1043, %r1045, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r1003, %r1004};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r1046, %r1047}, [%r9];
	ld.shared.v2.u32 	{%r1048, %r1049}, [%r11+32];
	ld.shared.v2.u32 	{%r1015, %r1016}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r1016, %r1015, %r962;  shf.l.wrap.b32 %r1016, %r1015, %r1016, %r962;  mov.b32 %r1015, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r1020, %r1046, %r1048, %r1015, 0x96;  lop3.b32 %r1021, %r1047, %r1049, %r1016, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r1020, %r1021};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd167, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd168, %rd167, %r172;
	shr.u64 	%rd169, %rd167, %r173;
	or.b64  	%rd170, %rd169, %rd168;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd170;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r1030, %r1031}, %rd170;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r1054, %r1055}, [%r17];
	ld.shared.v2.u32 	{%r1056, %r1057}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r1028, %r1030, %r1054, %r1056, 0xD2;  lop3.b32 %r1029, %r1031, %r1055, %r1057, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r1028, %r1029};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_46;

	.loc	1 0 9
	ld.const.u64 	%rd233, [g_iota_aux+136];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd171, [%r8];
	xor.b64  	%rd172, %rd171, %rd233;
	st.shared.u64 	[%r8], %rd172;

$L__BB1_46:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r1091, %r1092}, [%r15];
	mov.u32 	%r1072, 1;
	ld.shared.v2.u32 	{%r1093, %r1094}, [%r15+40];
	ld.shared.v2.u32 	{%r1095, %r1096}, [%r15+80];
	ld.shared.v2.u32 	{%r1097, %r1098}, [%r15+120];
	ld.shared.v2.u32 	{%r1099, %r1100}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r1058, %r1091, %r1093, %r1095, 0x96;  lop3.b32 %r1059, %r1092, %r1094, %r1096, 0x96;  lop3.b32 %r1058, %r1058, %r1097, %r1099, 0x96;  lop3.b32 %r1059, %r1059, %r1098, %r1100, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r1058, %r1059};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r1101, %r1102}, [%r9];
	ld.shared.v2.u32 	{%r1103, %r1104}, [%r11+32];
	ld.shared.v2.u32 	{%r1070, %r1071}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r1071, %r1070, %r1072;  shf.l.wrap.b32 %r1071, %r1070, %r1071, %r1072;  mov.b32 %r1070, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r1075, %r1101, %r1103, %r1070, 0x96;  lop3.b32 %r1076, %r1102, %r1104, %r1071, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r1075, %r1076};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd173, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd174, %rd173, %r172;
	shr.u64 	%rd175, %rd173, %r173;
	or.b64  	%rd176, %rd175, %rd174;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd176;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r1085, %r1086}, %rd176;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r1109, %r1110}, [%r17];
	ld.shared.v2.u32 	{%r1111, %r1112}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r1083, %r1085, %r1109, %r1111, 0xD2;  lop3.b32 %r1084, %r1086, %r1110, %r1112, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r1083, %r1084};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_48;

	.loc	1 0 9
	ld.const.u64 	%rd235, [g_iota_aux+144];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd177, [%r8];
	xor.b64  	%rd178, %rd177, %rd235;
	st.shared.u64 	[%r8], %rd178;

$L__BB1_48:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r1146, %r1147}, [%r15];
	ld.shared.v2.u32 	{%r1148, %r1149}, [%r15+40];
	ld.shared.v2.u32 	{%r1150, %r1151}, [%r15+80];
	ld.shared.v2.u32 	{%r1152, %r1153}, [%r15+120];
	ld.shared.v2.u32 	{%r1154, %r1155}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r1113, %r1146, %r1148, %r1150, 0x96;  lop3.b32 %r1114, %r1147, %r1149, %r1151, 0x96;  lop3.b32 %r1113, %r1113, %r1152, %r1154, 0x96;  lop3.b32 %r1114, %r1114, %r1153, %r1155, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r1113, %r1114};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r1156, %r1157}, [%r9];
	ld.shared.v2.u32 	{%r1158, %r1159}, [%r11+32];
	ld.shared.v2.u32 	{%r1125, %r1126}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r1126, %r1125, %r1072;  shf.l.wrap.b32 %r1126, %r1125, %r1126, %r1072;  mov.b32 %r1125, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r1130, %r1156, %r1158, %r1125, 0x96;  lop3.b32 %r1131, %r1157, %r1159, %r1126, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r1130, %r1131};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd179, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd180, %rd179, %r172;
	shr.u64 	%rd181, %rd179, %r173;
	or.b64  	%rd182, %rd181, %rd180;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd182;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r1140, %r1141}, %rd182;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r1164, %r1165}, [%r17];
	ld.shared.v2.u32 	{%r1166, %r1167}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r1138, %r1140, %r1164, %r1166, 0xD2;  lop3.b32 %r1139, %r1141, %r1165, %r1167, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r1138, %r1139};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_50;

	.loc	1 0 9
	ld.const.u64 	%rd236, [g_iota_aux+152];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd183, [%r8];
	xor.b64  	%rd184, %rd183, %rd236;
	st.shared.u64 	[%r8], %rd184;

$L__BB1_50:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r1201, %r1202}, [%r15];
	mov.u32 	%r1182, 1;
	ld.shared.v2.u32 	{%r1203, %r1204}, [%r15+40];
	ld.shared.v2.u32 	{%r1205, %r1206}, [%r15+80];
	ld.shared.v2.u32 	{%r1207, %r1208}, [%r15+120];
	ld.shared.v2.u32 	{%r1209, %r1210}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r1168, %r1201, %r1203, %r1205, 0x96;  lop3.b32 %r1169, %r1202, %r1204, %r1206, 0x96;  lop3.b32 %r1168, %r1168, %r1207, %r1209, 0x96;  lop3.b32 %r1169, %r1169, %r1208, %r1210, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r1168, %r1169};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r1211, %r1212}, [%r9];
	ld.shared.v2.u32 	{%r1213, %r1214}, [%r11+32];
	ld.shared.v2.u32 	{%r1180, %r1181}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r1181, %r1180, %r1182;  shf.l.wrap.b32 %r1181, %r1180, %r1181, %r1182;  mov.b32 %r1180, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r1185, %r1211, %r1213, %r1180, 0x96;  lop3.b32 %r1186, %r1212, %r1214, %r1181, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r1185, %r1186};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd185, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd186, %rd185, %r172;
	shr.u64 	%rd187, %rd185, %r173;
	or.b64  	%rd188, %rd187, %rd186;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd188;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r1195, %r1196}, %rd188;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r1219, %r1220}, [%r17];
	ld.shared.v2.u32 	{%r1221, %r1222}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r1193, %r1195, %r1219, %r1221, 0xD2;  lop3.b32 %r1194, %r1196, %r1220, %r1222, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r1193, %r1194};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_52;

	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd189, [%r8];
	xor.b64  	%rd190, %rd189, %rd23;
	st.shared.u64 	[%r8], %rd190;

$L__BB1_52:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r1256, %r1257}, [%r15];
	ld.shared.v2.u32 	{%r1258, %r1259}, [%r15+40];
	ld.shared.v2.u32 	{%r1260, %r1261}, [%r15+80];
	ld.shared.v2.u32 	{%r1262, %r1263}, [%r15+120];
	ld.shared.v2.u32 	{%r1264, %r1265}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r1223, %r1256, %r1258, %r1260, 0x96;  lop3.b32 %r1224, %r1257, %r1259, %r1261, 0x96;  lop3.b32 %r1223, %r1223, %r1262, %r1264, 0x96;  lop3.b32 %r1224, %r1224, %r1263, %r1265, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r1223, %r1224};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r1266, %r1267}, [%r9];
	ld.shared.v2.u32 	{%r1268, %r1269}, [%r11+32];
	ld.shared.v2.u32 	{%r1235, %r1236}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r1236, %r1235, %r1182;  shf.l.wrap.b32 %r1236, %r1235, %r1236, %r1182;  mov.b32 %r1235, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r1240, %r1266, %r1268, %r1235, 0x96;  lop3.b32 %r1241, %r1267, %r1269, %r1236, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r1240, %r1241};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd191, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd192, %rd191, %r172;
	shr.u64 	%rd193, %rd191, %r173;
	or.b64  	%rd194, %rd193, %rd192;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd194;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r1250, %r1251}, %rd194;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r1274, %r1275}, [%r17];
	ld.shared.v2.u32 	{%r1276, %r1277}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r1248, %r1250, %r1274, %r1276, 0xD2;  lop3.b32 %r1249, %r1251, %r1275, %r1277, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r1248, %r1249};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_54;

	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd195, [%r8];
	xor.b64  	%rd196, %rd195, %rd24;
	st.shared.u64 	[%r8], %rd196;

$L__BB1_54:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r1311, %r1312}, [%r15];
	mov.u32 	%r1292, 1;
	ld.shared.v2.u32 	{%r1313, %r1314}, [%r15+40];
	ld.shared.v2.u32 	{%r1315, %r1316}, [%r15+80];
	ld.shared.v2.u32 	{%r1317, %r1318}, [%r15+120];
	ld.shared.v2.u32 	{%r1319, %r1320}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r1278, %r1311, %r1313, %r1315, 0x96;  lop3.b32 %r1279, %r1312, %r1314, %r1316, 0x96;  lop3.b32 %r1278, %r1278, %r1317, %r1319, 0x96;  lop3.b32 %r1279, %r1279, %r1318, %r1320, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r1278, %r1279};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r1321, %r1322}, [%r9];
	ld.shared.v2.u32 	{%r1323, %r1324}, [%r11+32];
	ld.shared.v2.u32 	{%r1290, %r1291}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r1291, %r1290, %r1292;  shf.l.wrap.b32 %r1291, %r1290, %r1291, %r1292;  mov.b32 %r1290, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r1295, %r1321, %r1323, %r1290, 0x96;  lop3.b32 %r1296, %r1322, %r1324, %r1291, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r1295, %r1296};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd197, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd198, %rd197, %r172;
	shr.u64 	%rd199, %rd197, %r173;
	or.b64  	%rd200, %rd199, %rd198;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd200;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r1305, %r1306}, %rd200;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r1329, %r1330}, [%r17];
	ld.shared.v2.u32 	{%r1331, %r1332}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r1303, %r1305, %r1329, %r1331, 0xD2;  lop3.b32 %r1304, %r1306, %r1330, %r1332, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r1303, %r1304};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_56;

	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd201, [%r8];
	xor.b64  	%rd202, %rd201, %rd25;
	st.shared.u64 	[%r8], %rd202;

$L__BB1_56:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r1366, %r1367}, [%r15];
	ld.shared.v2.u32 	{%r1368, %r1369}, [%r15+40];
	ld.shared.v2.u32 	{%r1370, %r1371}, [%r15+80];
	ld.shared.v2.u32 	{%r1372, %r1373}, [%r15+120];
	ld.shared.v2.u32 	{%r1374, %r1375}, [%r15+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r1333, %r1366, %r1368, %r1370, 0x96;  lop3.b32 %r1334, %r1367, %r1369, %r1371, 0x96;  lop3.b32 %r1333, %r1333, %r1372, %r1374, 0x96;  lop3.b32 %r1334, %r1334, %r1373, %r1375, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r5], {%r1333, %r1334};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r1376, %r1377}, [%r9];
	ld.shared.v2.u32 	{%r1378, %r1379}, [%r11+32];
	ld.shared.v2.u32 	{%r1345, %r1346}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r1346, %r1345, %r1292;  shf.l.wrap.b32 %r1346, %r1345, %r1346, %r1292;  mov.b32 %r1345, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r1350, %r1376, %r1378, %r1345, 0x96;  lop3.b32 %r1351, %r1377, %r1379, %r1346, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r1350, %r1351};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd203, [%r16];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd204, %rd203, %r172;
	shr.u64 	%rd205, %rd203, %r173;
	or.b64  	%rd206, %rd205, %rd204;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.u64 	[%r5], %rd206;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r1360, %r1361}, %rd206;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.v2.u32 	{%r1384, %r1385}, [%r17];
	ld.shared.v2.u32 	{%r1386, %r1387}, [%r18];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r1358, %r1360, %r1384, %r1386, 0xD2;  lop3.b32 %r1359, %r1361, %r1385, %r1387, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 225 9
	st.shared.v2.u32 	[%r9], {%r1358, %r1359};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 225 9
	@%p4 bra 	$L__BB1_63;

	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 225 9
	ld.shared.u64 	%rd207, [%r8];
	mov.u32 	%r1393, 0;
	xor.b64  	%rd208, %rd207, %rd26;
	st.shared.u64 	[%r8], %rd208;

$L__BB1_58:
	.loc	1 230 17
	.loc	1 142 9, function_name $L__info_string7, inlined_at 1 230 17
	add.s32 	%r1389, %r8, %r1393;
	cvt.s64.s32 	%rd209, %r1393;
	add.s64 	%rd210, %rd36, %rd209;
	ld.global.nc.u8 	%rs1, [%rd210];
	ld.shared.u8 	%rs2, [%r1389];
	setp.lt.u16 	%p31, %rs2, %rs1;
	@%p31 bra 	$L__BB1_60;

	.loc	1 146 14, function_name $L__info_string7, inlined_at 1 230 17
	setp.le.u16 	%p32, %rs2, %rs1;
	.loc	1 140 29, function_name $L__info_string7, inlined_at 1 230 17
	add.s32 	%r1393, %r1393, 1;
	.loc	1 140 5, function_name $L__info_string7, inlined_at 1 230 17
	setp.lt.u32 	%p33, %r1393, 32;
	.loc	1 146 14, function_name $L__info_string7, inlined_at 1 230 17
	and.pred  	%p34, %p32, %p33;
	@%p34 bra 	$L__BB1_58;
	bra.uni 	$L__BB1_62;

$L__BB1_60:
	.loc	1 178 16
	add.u64 	%rd38, %SPL, 0;
	mov.u64 	%rd239, 0;

$L__BB1_61:
	.loc	1 0 16
	add.s64 	%rd213, %rd38, %rd239;
	ld.local.u8 	%rs11, [%rd213];
	add.s64 	%rd214, %rd37, %rd239;
	st.global.u8 	[%rd214], %rs11;
	add.s64 	%rd239, %rd239, 1;
	setp.lt.u64 	%p35, %rd239, 32;
	@%p35 bra 	$L__BB1_61;

$L__BB1_62:
	add.u64 	%rd215, %SP, 0;
	.loc	1 235 13
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd215;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 1

$L__BB1_63:
	.loc	1 207 42
	add.s32 	%r1391, %r1391, 1;
	.loc	1 207 5
	setp.lt.s32 	%p36, %r1391, %r7;
	@%p36 bra 	$L__BB1_4;

$L__BB1_64:
	.loc	1 238 1
	ret;

}
	// .globl	kernel_lilypad_pow_debug
.visible .entry kernel_lilypad_pow_debug(
	.param .u64 kernel_lilypad_pow_debug_param_0,
	.param .u64 kernel_lilypad_pow_debug_param_1,
	.param .u64 kernel_lilypad_pow_debug_param_2,
	.param .u32 kernel_lilypad_pow_debug_param_3,
	.param .u32 kernel_lilypad_pow_debug_param_4,
	.param .u64 kernel_lilypad_pow_debug_param_5,
	.param .u64 kernel_lilypad_pow_debug_param_6,
	.param .u64 kernel_lilypad_pow_debug_param_7
)
.maxntid 1024, 1, 1
{
	.local .align 16 .b8 	__local_depot2[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<38>;
	.reg .b16 	%rs<461>;
	.reg .b32 	%r<1402>;
	.reg .b64 	%rd<254>;
	.loc	1 240 0
	// demoted variable
	.shared .align 8 .b8 _ZZ24kernel_lilypad_pow_debugE12stateInBlock[6400];
	// demoted variable
	.shared .align 8 .b8 _ZZ24kernel_lilypad_pow_debugE8cInBlock[6400];

	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd43, [kernel_lilypad_pow_debug_param_0];
	ld.param.u64 	%rd45, [kernel_lilypad_pow_debug_param_2];
	ld.param.u32 	%r25, [kernel_lilypad_pow_debug_param_3];
	ld.param.u32 	%r24, [kernel_lilypad_pow_debug_param_4];
	ld.param.u64 	%rd46, [kernel_lilypad_pow_debug_param_5];
	ld.param.u64 	%rd47, [kernel_lilypad_pow_debug_param_6];
	ld.param.u64 	%rd48, [kernel_lilypad_pow_debug_param_7];
	.loc	1 247 16
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r27, %ctaid.x;
	mov.u32 	%r1, %tid.x;
	mad.lo.s32 	%r2, %r27, %r26, %r1;
	.loc	1 248 5
	setp.ge.u32 	%p1, %r2, %r25;
	@%p1 bra 	$L__BB2_66;

	.loc	1 254 27
	shr.s32 	%r28, %r2, 31;
	shr.u32 	%r29, %r28, 27;
	add.s32 	%r30, %r2, %r29;
	and.b32  	%r31, %r30, -32;
	sub.s32 	%r3, %r2, %r31;
	.loc	1 255 5
	setp.gt.s32 	%p2, %r3, 24;
	@%p2 bra 	$L__BB2_66;

	.loc	1 253 25
	shr.s32 	%r35, %r30, 5;
	.loc	1 260 26
	shr.u32 	%r4, %r1, 5;
	.loc	1 270 5
	mov.u32 	%r36, _ZZ24kernel_lilypad_pow_debugE8cInBlock;
	mad.lo.s32 	%r37, %r4, 200, %r36;
	shl.b32 	%r38, %r3, 3;
	add.s32 	%r5, %r37, %r38;
	mov.u64 	%rd49, 0;
	st.shared.u64 	[%r5], %rd49;
	.loc	1 273 5
	.loc	2 110 3, function_name $L__info_string0, inlined_at 1 273 5
	bar.warp.sync 	-1;
	.loc	1 274 21
	mul.lo.s32 	%r1399, %r35, %r24;
	.loc	1 275 24
	add.s32 	%r7, %r1399, %r24;
	.loc	1 276 5
	setp.ge.s32 	%p3, %r1399, %r7;
	@%p3 bra 	$L__BB2_66;

	.loc	1 0 5
	mul.lo.s32 	%r39, %r4, 200;
	mov.u32 	%r40, _ZZ24kernel_lilypad_pow_debugE12stateInBlock;
	add.s32 	%r9, %r40, %r39;
	add.s32 	%r8, %r9, %r38;
	mul.hi.s32 	%r42, %r3, 1717986919;
	shr.u32 	%r43, %r42, 31;
	shr.s32 	%r44, %r42, 1;
	add.s32 	%r45, %r44, %r43;
	mul.lo.s32 	%r46, %r45, 5;
	sub.s32 	%r10, %r3, %r46;
	add.s32 	%r48, %r36, %r39;
	shl.b32 	%r49, %r10, 3;
	add.s32 	%r11, %r48, %r49;
	mul.wide.s32 	%rd50, %r3, 2;
	mov.u64 	%rd51, g_ppi_aux;
	add.s64 	%rd1, %rd51, %rd50;
	mov.u64 	%rd52, g_ksi_aux;
	add.s64 	%rd2, %rd52, %rd50;
	cvta.to.global.u64 	%rd27, %rd43;
	ld.const.u8 	%rs325, [%rd1];
	ld.const.u8 	%rs326, [%rd1+1];
	ld.const.u8 	%rs327, [%rd2];
	ld.const.u8 	%rs328, [%rd2+1];
	cvta.to.global.u64 	%rd35, %rd45;
	cvta.to.global.u64 	%rd36, %rd47;
	cvta.to.global.u64 	%rd217, %rd48;
	cvta.to.global.u64 	%rd39, %rd46;

$L__BB2_4:
	.loc	1 281 9
	mov.u64 	%rd250, 0;
	st.shared.u64 	[%r8], %rd250;
	setp.ne.s32 	%p4, %r3, 0;
	.loc	1 282 9
	@%p4 bra 	$L__BB2_10;

	.loc	1 0 9
	ld.param.u64 	%rd222, [kernel_lilypad_pow_debug_param_1];
	.loc	1 285 13
	cvt.s64.s32 	%rd55, %r1399;
	mov.u32 	%r1400, 0;
	add.u64 	%rd56, %SP, 0;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd56;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd222;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd55;
	call.uni 
	_Z10addUint256P7nonce_tPKyy, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 2
	.loc	1 267 20
	mad.lo.s32 	%r13, %r4, 200, %r40;

$L__BB2_6:
	.loc	1 0 20
	add.s64 	%rd57, %rd27, %rd250;
	ld.global.nc.u8 	%rs323, [%rd57];
	cvt.u32.u64 	%r54, %rd250;
	add.s32 	%r55, %r13, %r54;
	st.shared.u8 	[%r55], %rs323;
	add.s64 	%rd250, %rd250, 1;
	add.s32 	%r1400, %r1400, 1;
	setp.lt.u32 	%p5, %r1400, 32;
	@%p5 bra 	$L__BB2_6;

	.loc	1 247 16
	cvta.to.local.u64 	%rd30, %rd56;
	mov.u64 	%rd251, 0;

$L__BB2_8:
	.loc	1 0 16
	add.s64 	%rd60, %rd30, %rd251;
	ld.local.u8 	%rs324, [%rd60];
	cvt.u32.u64 	%r56, %rd251;
	add.s32 	%r57, %r9, %r56;
	st.shared.u8 	[%r57+32], %rs324;
	add.s64 	%rd251, %rd251, 1;
	setp.lt.u64 	%p6, %rd251, 32;
	@%p6 bra 	$L__BB2_8;

	.loc	1 289 13
	ld.shared.u8 	%rs460, [%r9+63];
	ld.shared.u8 	%rs459, [%r9+62];
	ld.shared.u8 	%rs458, [%r9+61];
	ld.shared.u8 	%rs457, [%r9+60];
	ld.shared.u8 	%rs456, [%r9+59];
	ld.shared.u8 	%rs455, [%r9+58];
	ld.shared.u8 	%rs454, [%r9+57];
	ld.shared.u8 	%rs453, [%r9+56];
	ld.shared.u8 	%rs452, [%r9+55];
	ld.shared.u8 	%rs451, [%r9+54];
	ld.shared.u8 	%rs450, [%r9+53];
	ld.shared.u8 	%rs449, [%r9+52];
	ld.shared.u8 	%rs448, [%r9+51];
	ld.shared.u8 	%rs447, [%r9+50];
	ld.shared.u8 	%rs446, [%r9+49];
	ld.shared.u8 	%rs445, [%r9+48];
	ld.shared.u8 	%rs444, [%r9+47];
	ld.shared.u8 	%rs443, [%r9+46];
	ld.shared.u8 	%rs442, [%r9+45];
	ld.shared.u8 	%rs441, [%r9+44];
	ld.shared.u8 	%rs440, [%r9+43];
	ld.shared.u8 	%rs439, [%r9+42];
	ld.shared.u8 	%rs438, [%r9+41];
	ld.shared.u8 	%rs437, [%r9+40];
	ld.shared.u8 	%rs436, [%r9+39];
	ld.shared.u8 	%rs435, [%r9+38];
	ld.shared.u8 	%rs434, [%r9+37];
	ld.shared.u8 	%rs433, [%r9+36];
	ld.shared.u8 	%rs432, [%r9+35];
	ld.shared.u8 	%rs431, [%r9+34];
	ld.shared.u8 	%rs430, [%r9+33];
	ld.shared.u8 	%rs429, [%r9+32];
	ld.shared.u8 	%rs428, [%r9+31];
	ld.shared.u8 	%rs427, [%r9+30];
	ld.shared.u8 	%rs426, [%r9+29];
	ld.shared.u8 	%rs425, [%r9+28];
	ld.shared.u8 	%rs424, [%r9+27];
	ld.shared.u8 	%rs423, [%r9+26];
	ld.shared.u8 	%rs422, [%r9+25];
	ld.shared.u8 	%rs421, [%r9+24];
	ld.shared.u8 	%rs420, [%r9+23];
	ld.shared.u8 	%rs419, [%r9+22];
	ld.shared.u8 	%rs418, [%r9+21];
	ld.shared.u8 	%rs417, [%r9+20];
	ld.shared.u8 	%rs416, [%r9+19];
	ld.shared.u8 	%rs415, [%r9+18];
	ld.shared.u8 	%rs414, [%r9+17];
	ld.shared.u8 	%rs413, [%r9+16];
	ld.shared.u8 	%rs412, [%r9+15];
	ld.shared.u8 	%rs411, [%r9+14];
	ld.shared.u8 	%rs410, [%r9+13];
	ld.shared.u8 	%rs409, [%r9+12];
	ld.shared.u8 	%rs408, [%r9+11];
	ld.shared.u8 	%rs407, [%r9+10];
	ld.shared.u8 	%rs406, [%r9+9];
	ld.shared.u8 	%rs405, [%r9+8];
	ld.shared.u8 	%rs404, [%r9+7];
	ld.shared.u8 	%rs403, [%r9+6];
	ld.shared.u8 	%rs402, [%r9+5];
	ld.shared.u8 	%rs401, [%r9+4];
	ld.shared.u8 	%rs400, [%r9+3];
	ld.shared.u8 	%rs399, [%r9+2];
	ld.shared.u8 	%rs398, [%r9+1];
	ld.shared.u8 	%rs397, [%r9];
	.loc	1 291 13
	ld.shared.u64 	%rd61, [%r9+64];
	xor.b64  	%rd62, %rd61, 1;
	st.shared.u64 	[%r9+64], %rd62;
	.loc	1 292 13
	ld.shared.u64 	%rd63, [%r9+128];
	xor.b64  	%rd64, %rd63, -9223372036854775808;
	st.shared.u64 	[%r9+128], %rd64;

$L__BB2_10:
	.loc	1 260 26
	add.s32 	%r16, %r9, %r49;
	.loc	1 296 9
	.loc	2 110 3, function_name $L__info_string0, inlined_at 1 296 9
	bar.warp.sync 	-1;
	.loc	1 297 9
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r97, %r98}, [%r16];
	mov.u32 	%r72, 1;
	ld.shared.v2.u32 	{%r99, %r100}, [%r16+40];
	ld.shared.v2.u32 	{%r101, %r102}, [%r16+80];
	ld.shared.v2.u32 	{%r103, %r104}, [%r16+120];
	ld.shared.v2.u32 	{%r105, %r106}, [%r16+160];
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r58, %r97, %r99, %r101, 0x96;  lop3.b32 %r59, %r98, %r100, %r102, 0x96;  lop3.b32 %r58, %r58, %r103, %r105, 0x96;  lop3.b32 %r59, %r59, %r104, %r106, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r58, %r59};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r107, %r108}, [%r8];
	ld.shared.v2.u32 	{%r109, %r110}, [%r11+32];
	ld.shared.v2.u32 	{%r70, %r71}, [%r11+8];
	.loc	1 122 73, function_name $L__info_string1, inlined_at 1 297 9
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r71, %r70, %r72;  shf.l.wrap.b32 %r71, %r70, %r71, %r72;  mov.b32 %r70, tmp;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r75, %r107, %r109, %r70, 0x96;  lop3.b32 %r76, %r108, %r110, %r71, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r75, %r76};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	mul.wide.u16 	%r113, %rs325, 8;
	add.s32 	%r17, %r9, %r113;
	cvt.u64.u16 	%rd65, %rs326;
	and.b64  	%rd33, %rd65, 255;
	ld.shared.u64 	%rd66, [%r17];
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	cvt.u32.u16 	%r114, %rs326;
	and.b32  	%r115, %r114, 255;
	shl.b64 	%rd67, %rd66, %r115;
	mov.u64 	%rd68, 64;
	sub.s64 	%rd69, %rd68, %rd33;
	cvt.u32.u64 	%r116, %rd69;
	shr.u64 	%rd70, %rd66, %r116;
	or.b64  	%rd71, %rd70, %rd67;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd71;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	mul.wide.u16 	%r119, %rs327, 8;
	add.s32 	%r18, %r48, %r119;
	mul.wide.u16 	%r120, %rs328, 8;
	add.s32 	%r19, %r48, %r120;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r85, %r86}, %rd71;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r121, %r122}, [%r18];
	ld.shared.v2.u32 	{%r123, %r124}, [%r19];
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r83, %r85, %r121, %r123, 0xD2;  lop3.b32 %r84, %r86, %r122, %r124, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r83, %r84};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_12;

	.loc	1 0 9
	ld.const.u64 	%rd240, [g_iota_aux];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd72, [%r9];
	xor.b64  	%rd73, %rd72, %rd240;
	st.shared.u64 	[%r9], %rd73;

$L__BB2_12:
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.u64 	%rd243, 64;
	sub.s64 	%rd242, %rd243, %rd33;
	and.b64  	%rd241, %rd242, 4294967295;
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r158, %r159}, [%r16];
	ld.shared.v2.u32 	{%r160, %r161}, [%r16+40];
	ld.shared.v2.u32 	{%r162, %r163}, [%r16+80];
	ld.shared.v2.u32 	{%r164, %r165}, [%r16+120];
	ld.shared.v2.u32 	{%r166, %r167}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r125, %r158, %r160, %r162, 0x96;  lop3.b32 %r126, %r159, %r161, %r163, 0x96;  lop3.b32 %r125, %r125, %r164, %r166, 0x96;  lop3.b32 %r126, %r126, %r165, %r167, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r125, %r126};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r168, %r169}, [%r8];
	ld.shared.v2.u32 	{%r170, %r171}, [%r11+32];
	ld.shared.v2.u32 	{%r137, %r138}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r138, %r137, %r72;  shf.l.wrap.b32 %r138, %r137, %r138, %r72;  mov.b32 %r137, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r142, %r168, %r170, %r137, 0x96;  lop3.b32 %r143, %r169, %r171, %r138, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r142, %r143};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd74, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	cvt.u32.u64 	%r174, %rd33;
	shl.b64 	%rd75, %rd74, %r174;
	cvt.u32.u64 	%r175, %rd241;
	shr.u64 	%rd76, %rd74, %r175;
	or.b64  	%rd77, %rd76, %rd75;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd77;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r152, %r153}, %rd77;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r176, %r177}, [%r18];
	ld.shared.v2.u32 	{%r178, %r179}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r150, %r152, %r176, %r178, 0xD2;  lop3.b32 %r151, %r153, %r177, %r179, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r150, %r151};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_14;

	.loc	1 0 9
	ld.const.u64 	%rd239, [g_iota_aux+8];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd78, [%r9];
	xor.b64  	%rd79, %rd78, %rd239;
	st.shared.u64 	[%r9], %rd79;

$L__BB2_14:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r213, %r214}, [%r16];
	mov.u32 	%r194, 1;
	ld.shared.v2.u32 	{%r215, %r216}, [%r16+40];
	ld.shared.v2.u32 	{%r217, %r218}, [%r16+80];
	ld.shared.v2.u32 	{%r219, %r220}, [%r16+120];
	ld.shared.v2.u32 	{%r221, %r222}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r180, %r213, %r215, %r217, 0x96;  lop3.b32 %r181, %r214, %r216, %r218, 0x96;  lop3.b32 %r180, %r180, %r219, %r221, 0x96;  lop3.b32 %r181, %r181, %r220, %r222, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r180, %r181};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r223, %r224}, [%r8];
	ld.shared.v2.u32 	{%r225, %r226}, [%r11+32];
	ld.shared.v2.u32 	{%r192, %r193}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r193, %r192, %r194;  shf.l.wrap.b32 %r193, %r192, %r193, %r194;  mov.b32 %r192, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r197, %r223, %r225, %r192, 0x96;  lop3.b32 %r198, %r224, %r226, %r193, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r197, %r198};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd80, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd81, %rd80, %r174;
	shr.u64 	%rd82, %rd80, %r175;
	or.b64  	%rd83, %rd82, %rd81;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd83;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r207, %r208}, %rd83;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r231, %r232}, [%r18];
	ld.shared.v2.u32 	{%r233, %r234}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r205, %r207, %r231, %r233, 0xD2;  lop3.b32 %r206, %r208, %r232, %r234, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r205, %r206};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_16;

	.loc	1 0 9
	ld.const.u64 	%rd238, [g_iota_aux+16];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd84, [%r9];
	xor.b64  	%rd85, %rd84, %rd238;
	st.shared.u64 	[%r9], %rd85;

$L__BB2_16:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r268, %r269}, [%r16];
	ld.shared.v2.u32 	{%r270, %r271}, [%r16+40];
	ld.shared.v2.u32 	{%r272, %r273}, [%r16+80];
	ld.shared.v2.u32 	{%r274, %r275}, [%r16+120];
	ld.shared.v2.u32 	{%r276, %r277}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r235, %r268, %r270, %r272, 0x96;  lop3.b32 %r236, %r269, %r271, %r273, 0x96;  lop3.b32 %r235, %r235, %r274, %r276, 0x96;  lop3.b32 %r236, %r236, %r275, %r277, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r235, %r236};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r278, %r279}, [%r8];
	ld.shared.v2.u32 	{%r280, %r281}, [%r11+32];
	ld.shared.v2.u32 	{%r247, %r248}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r248, %r247, %r194;  shf.l.wrap.b32 %r248, %r247, %r248, %r194;  mov.b32 %r247, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r252, %r278, %r280, %r247, 0x96;  lop3.b32 %r253, %r279, %r281, %r248, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r252, %r253};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd86, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd87, %rd86, %r174;
	shr.u64 	%rd88, %rd86, %r175;
	or.b64  	%rd89, %rd88, %rd87;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd89;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r262, %r263}, %rd89;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r286, %r287}, [%r18];
	ld.shared.v2.u32 	{%r288, %r289}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r260, %r262, %r286, %r288, 0xD2;  lop3.b32 %r261, %r263, %r287, %r289, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r260, %r261};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_18;

	.loc	1 0 9
	ld.const.u64 	%rd237, [g_iota_aux+24];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd90, [%r9];
	xor.b64  	%rd91, %rd90, %rd237;
	st.shared.u64 	[%r9], %rd91;

$L__BB2_18:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r323, %r324}, [%r16];
	mov.u32 	%r304, 1;
	ld.shared.v2.u32 	{%r325, %r326}, [%r16+40];
	ld.shared.v2.u32 	{%r327, %r328}, [%r16+80];
	ld.shared.v2.u32 	{%r329, %r330}, [%r16+120];
	ld.shared.v2.u32 	{%r331, %r332}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r290, %r323, %r325, %r327, 0x96;  lop3.b32 %r291, %r324, %r326, %r328, 0x96;  lop3.b32 %r290, %r290, %r329, %r331, 0x96;  lop3.b32 %r291, %r291, %r330, %r332, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r290, %r291};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r333, %r334}, [%r8];
	ld.shared.v2.u32 	{%r335, %r336}, [%r11+32];
	ld.shared.v2.u32 	{%r302, %r303}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r303, %r302, %r304;  shf.l.wrap.b32 %r303, %r302, %r303, %r304;  mov.b32 %r302, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r307, %r333, %r335, %r302, 0x96;  lop3.b32 %r308, %r334, %r336, %r303, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r307, %r308};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd92, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd93, %rd92, %r174;
	shr.u64 	%rd94, %rd92, %r175;
	or.b64  	%rd95, %rd94, %rd93;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd95;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r317, %r318}, %rd95;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r341, %r342}, [%r18];
	ld.shared.v2.u32 	{%r343, %r344}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r315, %r317, %r341, %r343, 0xD2;  lop3.b32 %r316, %r318, %r342, %r344, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r315, %r316};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_20;

	.loc	1 0 9
	ld.const.u64 	%rd236, [g_iota_aux+32];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd96, [%r9];
	xor.b64  	%rd97, %rd96, %rd236;
	st.shared.u64 	[%r9], %rd97;

$L__BB2_20:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r378, %r379}, [%r16];
	ld.shared.v2.u32 	{%r380, %r381}, [%r16+40];
	ld.shared.v2.u32 	{%r382, %r383}, [%r16+80];
	ld.shared.v2.u32 	{%r384, %r385}, [%r16+120];
	ld.shared.v2.u32 	{%r386, %r387}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r345, %r378, %r380, %r382, 0x96;  lop3.b32 %r346, %r379, %r381, %r383, 0x96;  lop3.b32 %r345, %r345, %r384, %r386, 0x96;  lop3.b32 %r346, %r346, %r385, %r387, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r345, %r346};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r388, %r389}, [%r8];
	ld.shared.v2.u32 	{%r390, %r391}, [%r11+32];
	ld.shared.v2.u32 	{%r357, %r358}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r358, %r357, %r304;  shf.l.wrap.b32 %r358, %r357, %r358, %r304;  mov.b32 %r357, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r362, %r388, %r390, %r357, 0x96;  lop3.b32 %r363, %r389, %r391, %r358, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r362, %r363};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd98, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd99, %rd98, %r174;
	shr.u64 	%rd100, %rd98, %r175;
	or.b64  	%rd101, %rd100, %rd99;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd101;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r372, %r373}, %rd101;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r396, %r397}, [%r18];
	ld.shared.v2.u32 	{%r398, %r399}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r370, %r372, %r396, %r398, 0xD2;  lop3.b32 %r371, %r373, %r397, %r399, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r370, %r371};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_22;

	.loc	1 0 9
	ld.const.u64 	%rd235, [g_iota_aux+40];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd102, [%r9];
	xor.b64  	%rd103, %rd102, %rd235;
	st.shared.u64 	[%r9], %rd103;

$L__BB2_22:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r433, %r434}, [%r16];
	mov.u32 	%r414, 1;
	ld.shared.v2.u32 	{%r435, %r436}, [%r16+40];
	ld.shared.v2.u32 	{%r437, %r438}, [%r16+80];
	ld.shared.v2.u32 	{%r439, %r440}, [%r16+120];
	ld.shared.v2.u32 	{%r441, %r442}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r400, %r433, %r435, %r437, 0x96;  lop3.b32 %r401, %r434, %r436, %r438, 0x96;  lop3.b32 %r400, %r400, %r439, %r441, 0x96;  lop3.b32 %r401, %r401, %r440, %r442, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r400, %r401};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r443, %r444}, [%r8];
	ld.shared.v2.u32 	{%r445, %r446}, [%r11+32];
	ld.shared.v2.u32 	{%r412, %r413}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r413, %r412, %r414;  shf.l.wrap.b32 %r413, %r412, %r413, %r414;  mov.b32 %r412, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r417, %r443, %r445, %r412, 0x96;  lop3.b32 %r418, %r444, %r446, %r413, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r417, %r418};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd104, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd105, %rd104, %r174;
	shr.u64 	%rd106, %rd104, %r175;
	or.b64  	%rd107, %rd106, %rd105;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd107;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r427, %r428}, %rd107;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r451, %r452}, [%r18];
	ld.shared.v2.u32 	{%r453, %r454}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r425, %r427, %r451, %r453, 0xD2;  lop3.b32 %r426, %r428, %r452, %r454, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r425, %r426};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_24;

	.loc	1 0 9
	ld.const.u64 	%rd234, [g_iota_aux+48];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd108, [%r9];
	xor.b64  	%rd109, %rd108, %rd234;
	st.shared.u64 	[%r9], %rd109;

$L__BB2_24:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r488, %r489}, [%r16];
	ld.shared.v2.u32 	{%r490, %r491}, [%r16+40];
	ld.shared.v2.u32 	{%r492, %r493}, [%r16+80];
	ld.shared.v2.u32 	{%r494, %r495}, [%r16+120];
	ld.shared.v2.u32 	{%r496, %r497}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r455, %r488, %r490, %r492, 0x96;  lop3.b32 %r456, %r489, %r491, %r493, 0x96;  lop3.b32 %r455, %r455, %r494, %r496, 0x96;  lop3.b32 %r456, %r456, %r495, %r497, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r455, %r456};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r498, %r499}, [%r8];
	ld.shared.v2.u32 	{%r500, %r501}, [%r11+32];
	ld.shared.v2.u32 	{%r467, %r468}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r468, %r467, %r414;  shf.l.wrap.b32 %r468, %r467, %r468, %r414;  mov.b32 %r467, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r472, %r498, %r500, %r467, 0x96;  lop3.b32 %r473, %r499, %r501, %r468, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r472, %r473};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd110, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd111, %rd110, %r174;
	shr.u64 	%rd112, %rd110, %r175;
	or.b64  	%rd113, %rd112, %rd111;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd113;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r482, %r483}, %rd113;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r506, %r507}, [%r18];
	ld.shared.v2.u32 	{%r508, %r509}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r480, %r482, %r506, %r508, 0xD2;  lop3.b32 %r481, %r483, %r507, %r509, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r480, %r481};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_26;

	.loc	1 0 9
	ld.const.u64 	%rd233, [g_iota_aux+56];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd114, [%r9];
	xor.b64  	%rd115, %rd114, %rd233;
	st.shared.u64 	[%r9], %rd115;

$L__BB2_26:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r543, %r544}, [%r16];
	mov.u32 	%r524, 1;
	ld.shared.v2.u32 	{%r545, %r546}, [%r16+40];
	ld.shared.v2.u32 	{%r547, %r548}, [%r16+80];
	ld.shared.v2.u32 	{%r549, %r550}, [%r16+120];
	ld.shared.v2.u32 	{%r551, %r552}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r510, %r543, %r545, %r547, 0x96;  lop3.b32 %r511, %r544, %r546, %r548, 0x96;  lop3.b32 %r510, %r510, %r549, %r551, 0x96;  lop3.b32 %r511, %r511, %r550, %r552, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r510, %r511};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r553, %r554}, [%r8];
	ld.shared.v2.u32 	{%r555, %r556}, [%r11+32];
	ld.shared.v2.u32 	{%r522, %r523}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r523, %r522, %r524;  shf.l.wrap.b32 %r523, %r522, %r523, %r524;  mov.b32 %r522, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r527, %r553, %r555, %r522, 0x96;  lop3.b32 %r528, %r554, %r556, %r523, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r527, %r528};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd116, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd117, %rd116, %r174;
	shr.u64 	%rd118, %rd116, %r175;
	or.b64  	%rd119, %rd118, %rd117;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd119;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r537, %r538}, %rd119;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r561, %r562}, [%r18];
	ld.shared.v2.u32 	{%r563, %r564}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r535, %r537, %r561, %r563, 0xD2;  lop3.b32 %r536, %r538, %r562, %r564, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r535, %r536};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_28;

	.loc	1 0 9
	ld.const.u64 	%rd232, [g_iota_aux+64];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd120, [%r9];
	xor.b64  	%rd121, %rd120, %rd232;
	st.shared.u64 	[%r9], %rd121;

$L__BB2_28:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r598, %r599}, [%r16];
	ld.shared.v2.u32 	{%r600, %r601}, [%r16+40];
	ld.shared.v2.u32 	{%r602, %r603}, [%r16+80];
	ld.shared.v2.u32 	{%r604, %r605}, [%r16+120];
	ld.shared.v2.u32 	{%r606, %r607}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r565, %r598, %r600, %r602, 0x96;  lop3.b32 %r566, %r599, %r601, %r603, 0x96;  lop3.b32 %r565, %r565, %r604, %r606, 0x96;  lop3.b32 %r566, %r566, %r605, %r607, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r565, %r566};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r608, %r609}, [%r8];
	ld.shared.v2.u32 	{%r610, %r611}, [%r11+32];
	ld.shared.v2.u32 	{%r577, %r578}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r578, %r577, %r524;  shf.l.wrap.b32 %r578, %r577, %r578, %r524;  mov.b32 %r577, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r582, %r608, %r610, %r577, 0x96;  lop3.b32 %r583, %r609, %r611, %r578, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r582, %r583};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd122, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd123, %rd122, %r174;
	shr.u64 	%rd124, %rd122, %r175;
	or.b64  	%rd125, %rd124, %rd123;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd125;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r592, %r593}, %rd125;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r616, %r617}, [%r18];
	ld.shared.v2.u32 	{%r618, %r619}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r590, %r592, %r616, %r618, 0xD2;  lop3.b32 %r591, %r593, %r617, %r619, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r590, %r591};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_30;

	.loc	1 0 9
	ld.const.u64 	%rd231, [g_iota_aux+72];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd126, [%r9];
	xor.b64  	%rd127, %rd126, %rd231;
	st.shared.u64 	[%r9], %rd127;

$L__BB2_30:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r653, %r654}, [%r16];
	mov.u32 	%r634, 1;
	ld.shared.v2.u32 	{%r655, %r656}, [%r16+40];
	ld.shared.v2.u32 	{%r657, %r658}, [%r16+80];
	ld.shared.v2.u32 	{%r659, %r660}, [%r16+120];
	ld.shared.v2.u32 	{%r661, %r662}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r620, %r653, %r655, %r657, 0x96;  lop3.b32 %r621, %r654, %r656, %r658, 0x96;  lop3.b32 %r620, %r620, %r659, %r661, 0x96;  lop3.b32 %r621, %r621, %r660, %r662, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r620, %r621};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r663, %r664}, [%r8];
	ld.shared.v2.u32 	{%r665, %r666}, [%r11+32];
	ld.shared.v2.u32 	{%r632, %r633}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r633, %r632, %r634;  shf.l.wrap.b32 %r633, %r632, %r633, %r634;  mov.b32 %r632, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r637, %r663, %r665, %r632, 0x96;  lop3.b32 %r638, %r664, %r666, %r633, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r637, %r638};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd128, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd129, %rd128, %r174;
	shr.u64 	%rd130, %rd128, %r175;
	or.b64  	%rd131, %rd130, %rd129;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd131;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r647, %r648}, %rd131;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r671, %r672}, [%r18];
	ld.shared.v2.u32 	{%r673, %r674}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r645, %r647, %r671, %r673, 0xD2;  lop3.b32 %r646, %r648, %r672, %r674, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r645, %r646};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_32;

	.loc	1 0 9
	ld.const.u64 	%rd230, [g_iota_aux+80];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd132, [%r9];
	xor.b64  	%rd133, %rd132, %rd230;
	st.shared.u64 	[%r9], %rd133;

$L__BB2_32:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r708, %r709}, [%r16];
	ld.shared.v2.u32 	{%r710, %r711}, [%r16+40];
	ld.shared.v2.u32 	{%r712, %r713}, [%r16+80];
	ld.shared.v2.u32 	{%r714, %r715}, [%r16+120];
	ld.shared.v2.u32 	{%r716, %r717}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r675, %r708, %r710, %r712, 0x96;  lop3.b32 %r676, %r709, %r711, %r713, 0x96;  lop3.b32 %r675, %r675, %r714, %r716, 0x96;  lop3.b32 %r676, %r676, %r715, %r717, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r675, %r676};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r718, %r719}, [%r8];
	ld.shared.v2.u32 	{%r720, %r721}, [%r11+32];
	ld.shared.v2.u32 	{%r687, %r688}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r688, %r687, %r634;  shf.l.wrap.b32 %r688, %r687, %r688, %r634;  mov.b32 %r687, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r692, %r718, %r720, %r687, 0x96;  lop3.b32 %r693, %r719, %r721, %r688, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r692, %r693};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd134, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd135, %rd134, %r174;
	shr.u64 	%rd136, %rd134, %r175;
	or.b64  	%rd137, %rd136, %rd135;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd137;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r702, %r703}, %rd137;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r726, %r727}, [%r18];
	ld.shared.v2.u32 	{%r728, %r729}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r700, %r702, %r726, %r728, 0xD2;  lop3.b32 %r701, %r703, %r727, %r729, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r700, %r701};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_34;

	.loc	1 0 9
	ld.const.u64 	%rd229, [g_iota_aux+88];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd138, [%r9];
	xor.b64  	%rd139, %rd138, %rd229;
	st.shared.u64 	[%r9], %rd139;

$L__BB2_34:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r763, %r764}, [%r16];
	mov.u32 	%r744, 1;
	ld.shared.v2.u32 	{%r765, %r766}, [%r16+40];
	ld.shared.v2.u32 	{%r767, %r768}, [%r16+80];
	ld.shared.v2.u32 	{%r769, %r770}, [%r16+120];
	ld.shared.v2.u32 	{%r771, %r772}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r730, %r763, %r765, %r767, 0x96;  lop3.b32 %r731, %r764, %r766, %r768, 0x96;  lop3.b32 %r730, %r730, %r769, %r771, 0x96;  lop3.b32 %r731, %r731, %r770, %r772, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r730, %r731};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r773, %r774}, [%r8];
	ld.shared.v2.u32 	{%r775, %r776}, [%r11+32];
	ld.shared.v2.u32 	{%r742, %r743}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r743, %r742, %r744;  shf.l.wrap.b32 %r743, %r742, %r743, %r744;  mov.b32 %r742, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r747, %r773, %r775, %r742, 0x96;  lop3.b32 %r748, %r774, %r776, %r743, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r747, %r748};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd140, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd141, %rd140, %r174;
	shr.u64 	%rd142, %rd140, %r175;
	or.b64  	%rd143, %rd142, %rd141;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd143;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r757, %r758}, %rd143;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r781, %r782}, [%r18];
	ld.shared.v2.u32 	{%r783, %r784}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r755, %r757, %r781, %r783, 0xD2;  lop3.b32 %r756, %r758, %r782, %r784, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r755, %r756};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_36;

	.loc	1 0 9
	ld.const.u64 	%rd228, [g_iota_aux+96];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd144, [%r9];
	xor.b64  	%rd145, %rd144, %rd228;
	st.shared.u64 	[%r9], %rd145;

$L__BB2_36:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r818, %r819}, [%r16];
	ld.shared.v2.u32 	{%r820, %r821}, [%r16+40];
	ld.shared.v2.u32 	{%r822, %r823}, [%r16+80];
	ld.shared.v2.u32 	{%r824, %r825}, [%r16+120];
	ld.shared.v2.u32 	{%r826, %r827}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r785, %r818, %r820, %r822, 0x96;  lop3.b32 %r786, %r819, %r821, %r823, 0x96;  lop3.b32 %r785, %r785, %r824, %r826, 0x96;  lop3.b32 %r786, %r786, %r825, %r827, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r785, %r786};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r828, %r829}, [%r8];
	ld.shared.v2.u32 	{%r830, %r831}, [%r11+32];
	ld.shared.v2.u32 	{%r797, %r798}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r798, %r797, %r744;  shf.l.wrap.b32 %r798, %r797, %r798, %r744;  mov.b32 %r797, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r802, %r828, %r830, %r797, 0x96;  lop3.b32 %r803, %r829, %r831, %r798, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r802, %r803};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd146, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd147, %rd146, %r174;
	shr.u64 	%rd148, %rd146, %r175;
	or.b64  	%rd149, %rd148, %rd147;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd149;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r812, %r813}, %rd149;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r836, %r837}, [%r18];
	ld.shared.v2.u32 	{%r838, %r839}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r810, %r812, %r836, %r838, 0xD2;  lop3.b32 %r811, %r813, %r837, %r839, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r810, %r811};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_38;

	.loc	1 0 9
	ld.const.u64 	%rd227, [g_iota_aux+104];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd150, [%r9];
	xor.b64  	%rd151, %rd150, %rd227;
	st.shared.u64 	[%r9], %rd151;

$L__BB2_38:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r873, %r874}, [%r16];
	mov.u32 	%r854, 1;
	ld.shared.v2.u32 	{%r875, %r876}, [%r16+40];
	ld.shared.v2.u32 	{%r877, %r878}, [%r16+80];
	ld.shared.v2.u32 	{%r879, %r880}, [%r16+120];
	ld.shared.v2.u32 	{%r881, %r882}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r840, %r873, %r875, %r877, 0x96;  lop3.b32 %r841, %r874, %r876, %r878, 0x96;  lop3.b32 %r840, %r840, %r879, %r881, 0x96;  lop3.b32 %r841, %r841, %r880, %r882, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r840, %r841};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r883, %r884}, [%r8];
	ld.shared.v2.u32 	{%r885, %r886}, [%r11+32];
	ld.shared.v2.u32 	{%r852, %r853}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r853, %r852, %r854;  shf.l.wrap.b32 %r853, %r852, %r853, %r854;  mov.b32 %r852, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r857, %r883, %r885, %r852, 0x96;  lop3.b32 %r858, %r884, %r886, %r853, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r857, %r858};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd152, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd153, %rd152, %r174;
	shr.u64 	%rd154, %rd152, %r175;
	or.b64  	%rd155, %rd154, %rd153;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd155;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r867, %r868}, %rd155;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r891, %r892}, [%r18];
	ld.shared.v2.u32 	{%r893, %r894}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r865, %r867, %r891, %r893, 0xD2;  lop3.b32 %r866, %r868, %r892, %r894, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r865, %r866};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_40;

	.loc	1 0 9
	ld.const.u64 	%rd226, [g_iota_aux+112];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd156, [%r9];
	xor.b64  	%rd157, %rd156, %rd226;
	st.shared.u64 	[%r9], %rd157;

$L__BB2_40:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r928, %r929}, [%r16];
	ld.shared.v2.u32 	{%r930, %r931}, [%r16+40];
	ld.shared.v2.u32 	{%r932, %r933}, [%r16+80];
	ld.shared.v2.u32 	{%r934, %r935}, [%r16+120];
	ld.shared.v2.u32 	{%r936, %r937}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r895, %r928, %r930, %r932, 0x96;  lop3.b32 %r896, %r929, %r931, %r933, 0x96;  lop3.b32 %r895, %r895, %r934, %r936, 0x96;  lop3.b32 %r896, %r896, %r935, %r937, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r895, %r896};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r938, %r939}, [%r8];
	ld.shared.v2.u32 	{%r940, %r941}, [%r11+32];
	ld.shared.v2.u32 	{%r907, %r908}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r908, %r907, %r854;  shf.l.wrap.b32 %r908, %r907, %r908, %r854;  mov.b32 %r907, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r912, %r938, %r940, %r907, 0x96;  lop3.b32 %r913, %r939, %r941, %r908, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r912, %r913};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd158, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd159, %rd158, %r174;
	shr.u64 	%rd160, %rd158, %r175;
	or.b64  	%rd161, %rd160, %rd159;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd161;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r922, %r923}, %rd161;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r946, %r947}, [%r18];
	ld.shared.v2.u32 	{%r948, %r949}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r920, %r922, %r946, %r948, 0xD2;  lop3.b32 %r921, %r923, %r947, %r949, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r920, %r921};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_42;

	.loc	1 0 9
	ld.const.u64 	%rd225, [g_iota_aux+120];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd162, [%r9];
	xor.b64  	%rd163, %rd162, %rd225;
	st.shared.u64 	[%r9], %rd163;

$L__BB2_42:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r983, %r984}, [%r16];
	mov.u32 	%r964, 1;
	ld.shared.v2.u32 	{%r985, %r986}, [%r16+40];
	ld.shared.v2.u32 	{%r987, %r988}, [%r16+80];
	ld.shared.v2.u32 	{%r989, %r990}, [%r16+120];
	ld.shared.v2.u32 	{%r991, %r992}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r950, %r983, %r985, %r987, 0x96;  lop3.b32 %r951, %r984, %r986, %r988, 0x96;  lop3.b32 %r950, %r950, %r989, %r991, 0x96;  lop3.b32 %r951, %r951, %r990, %r992, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r950, %r951};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r993, %r994}, [%r8];
	ld.shared.v2.u32 	{%r995, %r996}, [%r11+32];
	ld.shared.v2.u32 	{%r962, %r963}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r963, %r962, %r964;  shf.l.wrap.b32 %r963, %r962, %r963, %r964;  mov.b32 %r962, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r967, %r993, %r995, %r962, 0x96;  lop3.b32 %r968, %r994, %r996, %r963, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r967, %r968};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd164, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd165, %rd164, %r174;
	shr.u64 	%rd166, %rd164, %r175;
	or.b64  	%rd167, %rd166, %rd165;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd167;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r977, %r978}, %rd167;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r1001, %r1002}, [%r18];
	ld.shared.v2.u32 	{%r1003, %r1004}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r975, %r977, %r1001, %r1003, 0xD2;  lop3.b32 %r976, %r978, %r1002, %r1004, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r975, %r976};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_44;

	.loc	1 0 9
	ld.const.u64 	%rd224, [g_iota_aux+128];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd168, [%r9];
	xor.b64  	%rd169, %rd168, %rd224;
	st.shared.u64 	[%r9], %rd169;

$L__BB2_44:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r1038, %r1039}, [%r16];
	ld.shared.v2.u32 	{%r1040, %r1041}, [%r16+40];
	ld.shared.v2.u32 	{%r1042, %r1043}, [%r16+80];
	ld.shared.v2.u32 	{%r1044, %r1045}, [%r16+120];
	ld.shared.v2.u32 	{%r1046, %r1047}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r1005, %r1038, %r1040, %r1042, 0x96;  lop3.b32 %r1006, %r1039, %r1041, %r1043, 0x96;  lop3.b32 %r1005, %r1005, %r1044, %r1046, 0x96;  lop3.b32 %r1006, %r1006, %r1045, %r1047, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r1005, %r1006};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r1048, %r1049}, [%r8];
	ld.shared.v2.u32 	{%r1050, %r1051}, [%r11+32];
	ld.shared.v2.u32 	{%r1017, %r1018}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r1018, %r1017, %r964;  shf.l.wrap.b32 %r1018, %r1017, %r1018, %r964;  mov.b32 %r1017, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r1022, %r1048, %r1050, %r1017, 0x96;  lop3.b32 %r1023, %r1049, %r1051, %r1018, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r1022, %r1023};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd170, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd171, %rd170, %r174;
	shr.u64 	%rd172, %rd170, %r175;
	or.b64  	%rd173, %rd172, %rd171;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd173;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r1032, %r1033}, %rd173;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r1056, %r1057}, [%r18];
	ld.shared.v2.u32 	{%r1058, %r1059}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r1030, %r1032, %r1056, %r1058, 0xD2;  lop3.b32 %r1031, %r1033, %r1057, %r1059, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r1030, %r1031};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_46;

	.loc	1 0 9
	ld.const.u64 	%rd223, [g_iota_aux+136];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd174, [%r9];
	xor.b64  	%rd175, %rd174, %rd223;
	st.shared.u64 	[%r9], %rd175;

$L__BB2_46:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r1093, %r1094}, [%r16];
	mov.u32 	%r1074, 1;
	ld.shared.v2.u32 	{%r1095, %r1096}, [%r16+40];
	ld.shared.v2.u32 	{%r1097, %r1098}, [%r16+80];
	ld.shared.v2.u32 	{%r1099, %r1100}, [%r16+120];
	ld.shared.v2.u32 	{%r1101, %r1102}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r1060, %r1093, %r1095, %r1097, 0x96;  lop3.b32 %r1061, %r1094, %r1096, %r1098, 0x96;  lop3.b32 %r1060, %r1060, %r1099, %r1101, 0x96;  lop3.b32 %r1061, %r1061, %r1100, %r1102, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r1060, %r1061};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r1103, %r1104}, [%r8];
	ld.shared.v2.u32 	{%r1105, %r1106}, [%r11+32];
	ld.shared.v2.u32 	{%r1072, %r1073}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r1073, %r1072, %r1074;  shf.l.wrap.b32 %r1073, %r1072, %r1073, %r1074;  mov.b32 %r1072, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r1077, %r1103, %r1105, %r1072, 0x96;  lop3.b32 %r1078, %r1104, %r1106, %r1073, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r1077, %r1078};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd176, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd177, %rd176, %r174;
	shr.u64 	%rd178, %rd176, %r175;
	or.b64  	%rd179, %rd178, %rd177;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd179;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r1087, %r1088}, %rd179;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r1111, %r1112}, [%r18];
	ld.shared.v2.u32 	{%r1113, %r1114}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r1085, %r1087, %r1111, %r1113, 0xD2;  lop3.b32 %r1086, %r1088, %r1112, %r1114, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r1085, %r1086};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_48;

	.loc	1 0 9
	ld.const.u64 	%rd249, [g_iota_aux+144];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd180, [%r9];
	xor.b64  	%rd181, %rd180, %rd249;
	st.shared.u64 	[%r9], %rd181;

$L__BB2_48:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r1148, %r1149}, [%r16];
	ld.shared.v2.u32 	{%r1150, %r1151}, [%r16+40];
	ld.shared.v2.u32 	{%r1152, %r1153}, [%r16+80];
	ld.shared.v2.u32 	{%r1154, %r1155}, [%r16+120];
	ld.shared.v2.u32 	{%r1156, %r1157}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r1115, %r1148, %r1150, %r1152, 0x96;  lop3.b32 %r1116, %r1149, %r1151, %r1153, 0x96;  lop3.b32 %r1115, %r1115, %r1154, %r1156, 0x96;  lop3.b32 %r1116, %r1116, %r1155, %r1157, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r1115, %r1116};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r1158, %r1159}, [%r8];
	ld.shared.v2.u32 	{%r1160, %r1161}, [%r11+32];
	ld.shared.v2.u32 	{%r1127, %r1128}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r1128, %r1127, %r1074;  shf.l.wrap.b32 %r1128, %r1127, %r1128, %r1074;  mov.b32 %r1127, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r1132, %r1158, %r1160, %r1127, 0x96;  lop3.b32 %r1133, %r1159, %r1161, %r1128, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r1132, %r1133};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd182, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd183, %rd182, %r174;
	shr.u64 	%rd184, %rd182, %r175;
	or.b64  	%rd185, %rd184, %rd183;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd185;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r1142, %r1143}, %rd185;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r1166, %r1167}, [%r18];
	ld.shared.v2.u32 	{%r1168, %r1169}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r1140, %r1142, %r1166, %r1168, 0xD2;  lop3.b32 %r1141, %r1143, %r1167, %r1169, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r1140, %r1141};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_50;

	.loc	1 0 9
	ld.const.u64 	%rd248, [g_iota_aux+152];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd186, [%r9];
	xor.b64  	%rd187, %rd186, %rd248;
	st.shared.u64 	[%r9], %rd187;

$L__BB2_50:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r1203, %r1204}, [%r16];
	mov.u32 	%r1184, 1;
	ld.shared.v2.u32 	{%r1205, %r1206}, [%r16+40];
	ld.shared.v2.u32 	{%r1207, %r1208}, [%r16+80];
	ld.shared.v2.u32 	{%r1209, %r1210}, [%r16+120];
	ld.shared.v2.u32 	{%r1211, %r1212}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r1170, %r1203, %r1205, %r1207, 0x96;  lop3.b32 %r1171, %r1204, %r1206, %r1208, 0x96;  lop3.b32 %r1170, %r1170, %r1209, %r1211, 0x96;  lop3.b32 %r1171, %r1171, %r1210, %r1212, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r1170, %r1171};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r1213, %r1214}, [%r8];
	ld.shared.v2.u32 	{%r1215, %r1216}, [%r11+32];
	ld.shared.v2.u32 	{%r1182, %r1183}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r1183, %r1182, %r1184;  shf.l.wrap.b32 %r1183, %r1182, %r1183, %r1184;  mov.b32 %r1182, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r1187, %r1213, %r1215, %r1182, 0x96;  lop3.b32 %r1188, %r1214, %r1216, %r1183, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r1187, %r1188};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd188, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd189, %rd188, %r174;
	shr.u64 	%rd190, %rd188, %r175;
	or.b64  	%rd191, %rd190, %rd189;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd191;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r1197, %r1198}, %rd191;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r1221, %r1222}, [%r18];
	ld.shared.v2.u32 	{%r1223, %r1224}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r1195, %r1197, %r1221, %r1223, 0xD2;  lop3.b32 %r1196, %r1198, %r1222, %r1224, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r1195, %r1196};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_52;

	.loc	1 0 9
	ld.const.u64 	%rd247, [g_iota_aux+160];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd192, [%r9];
	xor.b64  	%rd193, %rd192, %rd247;
	st.shared.u64 	[%r9], %rd193;

$L__BB2_52:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r1258, %r1259}, [%r16];
	ld.shared.v2.u32 	{%r1260, %r1261}, [%r16+40];
	ld.shared.v2.u32 	{%r1262, %r1263}, [%r16+80];
	ld.shared.v2.u32 	{%r1264, %r1265}, [%r16+120];
	ld.shared.v2.u32 	{%r1266, %r1267}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r1225, %r1258, %r1260, %r1262, 0x96;  lop3.b32 %r1226, %r1259, %r1261, %r1263, 0x96;  lop3.b32 %r1225, %r1225, %r1264, %r1266, 0x96;  lop3.b32 %r1226, %r1226, %r1265, %r1267, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r1225, %r1226};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r1268, %r1269}, [%r8];
	ld.shared.v2.u32 	{%r1270, %r1271}, [%r11+32];
	ld.shared.v2.u32 	{%r1237, %r1238}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r1238, %r1237, %r1184;  shf.l.wrap.b32 %r1238, %r1237, %r1238, %r1184;  mov.b32 %r1237, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r1242, %r1268, %r1270, %r1237, 0x96;  lop3.b32 %r1243, %r1269, %r1271, %r1238, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r1242, %r1243};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd194, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd195, %rd194, %r174;
	shr.u64 	%rd196, %rd194, %r175;
	or.b64  	%rd197, %rd196, %rd195;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd197;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r1252, %r1253}, %rd197;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r1276, %r1277}, [%r18];
	ld.shared.v2.u32 	{%r1278, %r1279}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r1250, %r1252, %r1276, %r1278, 0xD2;  lop3.b32 %r1251, %r1253, %r1277, %r1279, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r1250, %r1251};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_54;

	.loc	1 0 9
	ld.const.u64 	%rd246, [g_iota_aux+168];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd198, [%r9];
	xor.b64  	%rd199, %rd198, %rd246;
	st.shared.u64 	[%r9], %rd199;

$L__BB2_54:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r1313, %r1314}, [%r16];
	mov.u32 	%r1294, 1;
	ld.shared.v2.u32 	{%r1315, %r1316}, [%r16+40];
	ld.shared.v2.u32 	{%r1317, %r1318}, [%r16+80];
	ld.shared.v2.u32 	{%r1319, %r1320}, [%r16+120];
	ld.shared.v2.u32 	{%r1321, %r1322}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r1280, %r1313, %r1315, %r1317, 0x96;  lop3.b32 %r1281, %r1314, %r1316, %r1318, 0x96;  lop3.b32 %r1280, %r1280, %r1319, %r1321, 0x96;  lop3.b32 %r1281, %r1281, %r1320, %r1322, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r1280, %r1281};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r1323, %r1324}, [%r8];
	ld.shared.v2.u32 	{%r1325, %r1326}, [%r11+32];
	ld.shared.v2.u32 	{%r1292, %r1293}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r1293, %r1292, %r1294;  shf.l.wrap.b32 %r1293, %r1292, %r1293, %r1294;  mov.b32 %r1292, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r1297, %r1323, %r1325, %r1292, 0x96;  lop3.b32 %r1298, %r1324, %r1326, %r1293, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r1297, %r1298};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd200, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd201, %rd200, %r174;
	shr.u64 	%rd202, %rd200, %r175;
	or.b64  	%rd203, %rd202, %rd201;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd203;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r1307, %r1308}, %rd203;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r1331, %r1332}, [%r18];
	ld.shared.v2.u32 	{%r1333, %r1334}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r1305, %r1307, %r1331, %r1333, 0xD2;  lop3.b32 %r1306, %r1308, %r1332, %r1334, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r1305, %r1306};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_56;

	.loc	1 0 9
	ld.const.u64 	%rd245, [g_iota_aux+176];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd204, [%r9];
	xor.b64  	%rd205, %rd204, %rd245;
	st.shared.u64 	[%r9], %rd205;

$L__BB2_56:
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r1368, %r1369}, [%r16];
	ld.shared.v2.u32 	{%r1370, %r1371}, [%r16+40];
	ld.shared.v2.u32 	{%r1372, %r1373}, [%r16+80];
	ld.shared.v2.u32 	{%r1374, %r1375}, [%r16+120];
	ld.shared.v2.u32 	{%r1376, %r1377}, [%r16+160];
	.loc	1 42 5, function_name $L__info_string2, inlined_at 1 121 32
	// begin inline asm
	{  lop3.b32 %r1335, %r1368, %r1370, %r1372, 0x96;  lop3.b32 %r1336, %r1369, %r1371, %r1373, 0x96;  lop3.b32 %r1335, %r1335, %r1374, %r1376, 0x96;  lop3.b32 %r1336, %r1336, %r1375, %r1377, 0x96;}
	// end inline asm
	.loc	1 121 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r5], {%r1335, %r1336};
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r1378, %r1379}, [%r8];
	ld.shared.v2.u32 	{%r1380, %r1381}, [%r11+32];
	ld.shared.v2.u32 	{%r1347, %r1348}, [%r11+8];
	.loc	1 77 5, function_name $L__info_string3, inlined_at 1 122 73
	// begin inline asm
	{  .reg .b32 tmp;  shf.l.wrap.b32 tmp, %r1348, %r1347, %r1294;  shf.l.wrap.b32 %r1348, %r1347, %r1348, %r1294;  mov.b32 %r1347, tmp;}
	// end inline asm
	.loc	1 55 5, function_name $L__info_string4, inlined_at 1 122 32
	// begin inline asm
	{  lop3.b32 %r1352, %r1378, %r1380, %r1347, 0x96;  lop3.b32 %r1353, %r1379, %r1381, %r1348, 0x96;}
	// end inline asm
	.loc	1 122 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r1352, %r1353};
	.loc	1 125 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd206, [%r17];
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	shl.b64 	%rd207, %rd206, %r174;
	shr.u64 	%rd208, %rd206, %r175;
	or.b64  	%rd209, %rd208, %rd207;
	.loc	1 125 39, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.u64 	[%r5], %rd209;
	.loc	1 97 68, function_name $L__info_string5, inlined_at 1 125 39
	mov.b64 	{%r1362, %r1363}, %rd209;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.v2.u32 	{%r1386, %r1387}, [%r18];
	ld.shared.v2.u32 	{%r1388, %r1389}, [%r19];
	.loc	1 66 5, function_name $L__info_string6, inlined_at 1 128 32
	// begin inline asm
	{  lop3.b32 %r1360, %r1362, %r1386, %r1388, 0xD2;  lop3.b32 %r1361, %r1363, %r1387, %r1389, 0xD2;}
	// end inline asm
	.loc	1 128 32, function_name $L__info_string1, inlined_at 1 297 9
	st.shared.v2.u32 	[%r8], {%r1360, %r1361};
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 297 9
	@%p4 bra 	$L__BB2_65;

	.loc	1 0 9
	ld.const.u64 	%rd244, [g_iota_aux+184];
	.loc	1 133 13, function_name $L__info_string1, inlined_at 1 297 9
	ld.shared.u64 	%rd210, [%r9];
	mov.u32 	%r1401, 0;
	xor.b64  	%rd211, %rd210, %rd244;
	st.shared.u64 	[%r9], %rd211;

$L__BB2_58:
	.loc	1 267 20
	mad.lo.s32 	%r1397, %r4, 200, %r40;
	.loc	1 302 17
	.loc	1 142 9, function_name $L__info_string7, inlined_at 1 302 17
	add.s32 	%r1394, %r1397, %r1401;
	cvt.s64.s32 	%rd212, %r1401;
	add.s64 	%rd213, %rd35, %rd212;
	ld.global.nc.u8 	%rs193, [%rd213];
	ld.shared.u8 	%rs194, [%r1394];
	setp.lt.u16 	%p31, %rs194, %rs193;
	@%p31 bra 	$L__BB2_60;

	.loc	1 146 14, function_name $L__info_string7, inlined_at 1 302 17
	setp.le.u16 	%p32, %rs194, %rs193;
	.loc	1 140 29, function_name $L__info_string7, inlined_at 1 302 17
	add.s32 	%r1401, %r1401, 1;
	.loc	1 140 5, function_name $L__info_string7, inlined_at 1 302 17
	setp.lt.u32 	%p33, %r1401, 32;
	.loc	1 146 14, function_name $L__info_string7, inlined_at 1 302 17
	and.pred  	%p34, %p32, %p33;
	@%p34 bra 	$L__BB2_58;
	bra.uni 	$L__BB2_64;

$L__BB2_60:
	.loc	1 0 14
	mov.u64 	%rd252, 0;

$L__BB2_61:
	.loc	1 267 20
	mad.lo.s32 	%r1398, %r4, 200, %r40;
	cvt.u32.u64 	%r1395, %rd252;
	add.s32 	%r1396, %r1398, %r1395;
	ld.shared.u8 	%rs331, [%r1396];
	add.s64 	%rd215, %rd36, %rd252;
	st.global.u8 	[%rd215], %rs331;
	add.s64 	%rd252, %rd252, 1;
	setp.lt.u64 	%p35, %rd252, 32;
	@%p35 bra 	$L__BB2_61;

	.loc	1 0 20
	mov.u64 	%rd253, 0;
	.loc	1 305 17
	st.global.u8 	[%rd217], %rs397;
	st.global.u8 	[%rd217+1], %rs398;
	st.global.u8 	[%rd217+2], %rs399;
	st.global.u8 	[%rd217+3], %rs400;
	st.global.u8 	[%rd217+4], %rs401;
	st.global.u8 	[%rd217+5], %rs402;
	st.global.u8 	[%rd217+6], %rs403;
	st.global.u8 	[%rd217+7], %rs404;
	st.global.u8 	[%rd217+8], %rs405;
	st.global.u8 	[%rd217+9], %rs406;
	st.global.u8 	[%rd217+10], %rs407;
	st.global.u8 	[%rd217+11], %rs408;
	st.global.u8 	[%rd217+12], %rs409;
	st.global.u8 	[%rd217+13], %rs410;
	st.global.u8 	[%rd217+14], %rs411;
	st.global.u8 	[%rd217+15], %rs412;
	st.global.u8 	[%rd217+16], %rs413;
	st.global.u8 	[%rd217+17], %rs414;
	st.global.u8 	[%rd217+18], %rs415;
	st.global.u8 	[%rd217+19], %rs416;
	st.global.u8 	[%rd217+20], %rs417;
	st.global.u8 	[%rd217+21], %rs418;
	st.global.u8 	[%rd217+22], %rs419;
	st.global.u8 	[%rd217+23], %rs420;
	st.global.u8 	[%rd217+24], %rs421;
	st.global.u8 	[%rd217+25], %rs422;
	st.global.u8 	[%rd217+26], %rs423;
	st.global.u8 	[%rd217+27], %rs424;
	st.global.u8 	[%rd217+28], %rs425;
	st.global.u8 	[%rd217+29], %rs426;
	st.global.u8 	[%rd217+30], %rs427;
	st.global.u8 	[%rd217+31], %rs428;
	st.global.u8 	[%rd217+32], %rs429;
	st.global.u8 	[%rd217+33], %rs430;
	st.global.u8 	[%rd217+34], %rs431;
	st.global.u8 	[%rd217+35], %rs432;
	st.global.u8 	[%rd217+36], %rs433;
	st.global.u8 	[%rd217+37], %rs434;
	st.global.u8 	[%rd217+38], %rs435;
	st.global.u8 	[%rd217+39], %rs436;
	st.global.u8 	[%rd217+40], %rs437;
	st.global.u8 	[%rd217+41], %rs438;
	st.global.u8 	[%rd217+42], %rs439;
	st.global.u8 	[%rd217+43], %rs440;
	st.global.u8 	[%rd217+44], %rs441;
	st.global.u8 	[%rd217+45], %rs442;
	st.global.u8 	[%rd217+46], %rs443;
	st.global.u8 	[%rd217+47], %rs444;
	st.global.u8 	[%rd217+48], %rs445;
	st.global.u8 	[%rd217+49], %rs446;
	st.global.u8 	[%rd217+50], %rs447;
	st.global.u8 	[%rd217+51], %rs448;
	st.global.u8 	[%rd217+52], %rs449;
	st.global.u8 	[%rd217+53], %rs450;
	st.global.u8 	[%rd217+54], %rs451;
	st.global.u8 	[%rd217+55], %rs452;
	st.global.u8 	[%rd217+56], %rs453;
	st.global.u8 	[%rd217+57], %rs454;
	st.global.u8 	[%rd217+58], %rs455;
	st.global.u8 	[%rd217+59], %rs456;
	st.global.u8 	[%rd217+60], %rs457;
	st.global.u8 	[%rd217+61], %rs458;
	st.global.u8 	[%rd217+62], %rs459;
	st.global.u8 	[%rd217+63], %rs460;
	.loc	1 247 16
	add.u64 	%rd40, %SPL, 0;

$L__BB2_63:
	.loc	1 0 16
	add.s64 	%rd219, %rd40, %rd253;
	ld.local.u8 	%rs332, [%rd219];
	add.s64 	%rd220, %rd39, %rd253;
	st.global.u8 	[%rd220], %rs332;
	add.s64 	%rd253, %rd253, 1;
	setp.lt.u64 	%p36, %rd253, 32;
	@%p36 bra 	$L__BB2_63;

$L__BB2_64:
	add.u64 	%rd221, %SP, 0;
	.loc	1 309 13
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd221;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 3

$L__BB2_65:
	.loc	1 276 42
	add.s32 	%r1399, %r1399, 1;
	.loc	1 276 5
	setp.lt.s32 	%p37, %r1399, %r7;
	@%p37 bra 	$L__BB2_4;

$L__BB2_66:
	.loc	1 312 1
	ret;

}
	.file	1 "C:\\Users\\hunji\\code\\keccak_cu\\gpulib\\keccak.cu"
	.file	2 "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.0\\include\\sm_30_intrinsics.hpp"
	.section	.debug_str
	{
$L__info_string0:
.b8 95,90,78,51,57,95,73,78,84,69,82,78,65,76,95,57,52,52,53,57,57,48,102,95,57,95,107,101,99,99,97,107,95,99,117,95,50,100,54,100
.b8 102,56,101,53,49,48,95,95,115,121,110,99,119,97,114,112,69,106,0
$L__info_string1:
.b8 95,90,78,51,57,95,73,78,84,69,82,78,65,76,95,57,52,52,53,57,57,48,102,95,57,95,107,101,99,99,97,107,95,99,117,95,50,100,54,100
.b8 102,56,101,53,50,52,99,117,100,97,95,107,101,99,99,97,107,95,112,101,114,109,117,116,97,116,105,111,110,115,69,80,55,110,111,110,99,101,95,116
.b8 83,49,95,105,0
$L__info_string2:
.b8 95,90,52,120,111,114,53,55,110,111,110,99,101,95,116,83,95,83,95,83,95,83,95,0
$L__info_string3:
.b8 95,90,52,114,111,116,108,55,110,111,110,99,101,95,116,106,0
$L__info_string4:
.b8 95,90,52,120,111,114,51,55,110,111,110,99,101,95,116,83,95,83,95,0
$L__info_string5:
.b8 95,90,54,114,111,116,97,116,101,121,106,0
$L__info_string6:
.b8 95,90,51,99,104,105,55,110,111,110,99,101,95,116,83,95,83,95,0
$L__info_string7:
.b8 95,90,78,51,57,95,73,78,84,69,82,78,65,76,95,57,52,52,53,57,57,48,102,95,57,95,107,101,99,99,97,107,95,99,117,95,50,100,54,100
.b8 102,56,101,53,49,53,104,97,115,104,98,101,108,111,119,116,97,114,103,101,116,69,80,75,104,83,49,95,0

	}
