//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-32267302
// Cuda compilation tools, release 12.0, V12.0.140
// Based on NVVM 7.0.1
//

.version 8.0
.target sm_52
.address_size 64

.extern .func  (.param .b64 func_retval0) malloc
(
	.param .b64 malloc_param_0
)
;
.extern .func free
(
	.param .b64 free_param_0
)
;
.const .align 8 .b8 CUDA_KECCAK_CONSTS[192] = {1, 0, 0, 0, 0, 0, 0, 0, 130, 128, 0, 0, 0, 0, 0, 0, 138, 128, 0, 0, 0, 0, 0, 128, 0, 128, 0, 128, 0, 0, 0, 128, 139, 128, 0, 0, 0, 0, 0, 0, 1, 0, 0, 128, 0, 0, 0, 0, 129, 128, 0, 128, 0, 0, 0, 128, 9, 128, 0, 0, 0, 0, 0, 128, 138, 0, 0, 0, 0, 0, 0, 0, 136, 0, 0, 0, 0, 0, 0, 0, 9, 128, 0, 128, 0, 0, 0, 0, 10, 0, 0, 128, 0, 0, 0, 0, 139, 128, 0, 128, 0, 0, 0, 0, 139, 0, 0, 0, 0, 0, 0, 128, 137, 128, 0, 0, 0, 0, 0, 128, 3, 128, 0, 0, 0, 0, 0, 128, 2, 128, 0, 0, 0, 0, 0, 128, 128, 0, 0, 0, 0, 0, 0, 128, 10, 128, 0, 0, 0, 0, 0, 0, 10, 0, 0, 128, 0, 0, 0, 128, 129, 128, 0, 128, 0, 0, 0, 128, 128, 128, 0, 0, 0, 0, 0, 128, 1, 0, 0, 128, 0, 0, 0, 0, 8, 128, 0, 128, 0, 0, 0, 128};

.func  (.param .b32 func_retval0) _ZN39_INTERNAL_9445990f_9_keccak_cu_bbb2fa6e15hashbelowtargetEPKhS1_(
	.param .b64 _ZN39_INTERNAL_9445990f_9_keccak_cu_bbb2fa6e15hashbelowtargetEPKhS1__param_0,
	.param .b64 _ZN39_INTERNAL_9445990f_9_keccak_cu_bbb2fa6e15hashbelowtargetEPKhS1__param_1
)
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<7>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;
	.loc	1 165 0


	ld.param.u64 	%rd3, [_ZN39_INTERNAL_9445990f_9_keccak_cu_bbb2fa6e15hashbelowtargetEPKhS1__param_0];
	ld.param.u64 	%rd4, [_ZN39_INTERNAL_9445990f_9_keccak_cu_bbb2fa6e15hashbelowtargetEPKhS1__param_1];
	.loc	1 167 5
	cvta.to.global.u64 	%rd1, %rd4;
	cvta.to.local.u64 	%rd2, %rd3;
	mov.u32 	%r5, 0;

$L__BB0_1:
	.loc	1 169 9
	cvt.s64.s32 	%rd5, %r5;
	add.s64 	%rd6, %rd2, %rd5;
	add.s64 	%rd7, %rd1, %rd5;
	ld.global.u8 	%rs1, [%rd7];
	ld.local.u8 	%rs2, [%rd6];
	setp.lt.u16 	%p1, %rs2, %rs1;
	mov.u16 	%rs6, 1;
	@%p1 bra 	$L__BB0_3;

	.loc	1 173 14
	setp.le.u16 	%p2, %rs2, %rs1;
	.loc	1 167 29
	add.s32 	%r5, %r5, 1;
	.loc	1 167 5
	setp.lt.u32 	%p3, %r5, 32;
	.loc	1 173 14
	and.pred  	%p4, %p2, %p3;
	mov.u16 	%rs6, 0;
	@%p4 bra 	$L__BB0_1;

$L__BB0_3:
	.loc	1 178 5
	cvt.u32.u16 	%r4, %rs6;
	st.param.b32 	[func_retval0+0], %r4;
	ret;

}
	// .globl	kernel_lilypad_pow
.visible .entry kernel_lilypad_pow(
	.param .u64 kernel_lilypad_pow_param_0,
	.param .u64 kernel_lilypad_pow_param_1,
	.param .u64 kernel_lilypad_pow_param_2,
	.param .u32 kernel_lilypad_pow_param_3,
	.param .u32 kernel_lilypad_pow_param_4,
	.param .u64 kernel_lilypad_pow_param_5
)
.maxntid 1024, 1, 1
{
	.local .align 8 .b8 	__local_depot1[200];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<12>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<56>;
	.reg .b64 	%rd<284>;
	.loc	1 209 0


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd68, [kernel_lilypad_pow_param_0];
	ld.param.u64 	%rd69, [kernel_lilypad_pow_param_1];
	ld.param.u32 	%r10, [kernel_lilypad_pow_param_3];
	ld.param.u32 	%r9, [kernel_lilypad_pow_param_4];
	ld.param.u64 	%rd71, [kernel_lilypad_pow_param_5];
	.loc	1 216 21
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r12, %r11, %r13;
	.loc	1 217 5
	setp.ge.u32 	%p1, %r1, %r10;
	@%p1 bra 	$L__BB1_13;

	.loc	1 222 16
	mul.lo.s32 	%r53, %r1, %r9;
	.loc	1 222 5
	add.s32 	%r14, %r53, %r9;
	setp.ge.u32 	%p2, %r53, %r14;
	@%p2 bra 	$L__BB1_13;

	.loc	1 0 5
	cvta.to.global.u64 	%rd74, %rd69;
	add.u64 	%rd2, %SPL, 0;
	cvta.to.global.u64 	%rd90, %rd68;
	cvta.to.global.u64 	%rd65, %rd71;

$L__BB1_3:
	mov.u64 	%rd73, 32;
	.loc	1 225 37
	.loc	1 183 22, function_name $L__info_string0, inlined_at 1 225 37
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd73;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64 	%rd1, [retval0+0];
	} // callseq 0
	.loc	1 184 18, function_name $L__info_string0, inlined_at 1 225 37
	ld.global.nc.u64 	%rd75, [%rd74];
	.loc	1 225 24
	cvt.s64.s32 	%rd76, %r53;
	add.s64 	%rd77, %rd75, %rd76;
	setp.lt.u64 	%p3, %rd77, %rd75;
	mov.u64 	%rd256, 0;
	.loc	1 185 5, function_name $L__info_string0, inlined_at 1 225 37
	st.u64 	[%rd1], %rd77;
	.loc	1 188 5, function_name $L__info_string0, inlined_at 1 225 37
	selp.u64 	%rd78, 1, 0, %p3;
	.loc	1 190 9, function_name $L__info_string0, inlined_at 1 225 37
	ld.global.nc.u64 	%rd79, [%rd74+8];
	add.s64 	%rd80, %rd79, %rd78;
	setp.lt.u64 	%p4, %rd80, %rd79;
	.loc	1 191 9, function_name $L__info_string0, inlined_at 1 225 37
	st.u64 	[%rd1+8], %rd80;
	.loc	1 188 5, function_name $L__info_string0, inlined_at 1 225 37
	selp.u64 	%rd81, 1, 0, %p4;
	.loc	1 190 9, function_name $L__info_string0, inlined_at 1 225 37
	ld.global.nc.u64 	%rd82, [%rd74+16];
	add.s64 	%rd83, %rd82, %rd81;
	setp.lt.u64 	%p5, %rd83, %rd82;
	.loc	1 191 9, function_name $L__info_string0, inlined_at 1 225 37
	st.u64 	[%rd1+16], %rd83;
	.loc	1 188 5, function_name $L__info_string0, inlined_at 1 225 37
	selp.u64 	%rd84, 1, 0, %p5;
	.loc	1 190 9, function_name $L__info_string0, inlined_at 1 225 37
	ld.global.nc.u64 	%rd85, [%rd74+24];
	add.s64 	%rd86, %rd85, %rd84;
	.loc	1 191 9, function_name $L__info_string0, inlined_at 1 225 37
	st.u64 	[%rd1+24], %rd86;
	mov.u32 	%r54, 0;
	.loc	1 227 9
	st.local.v2.u32 	[%rd2+72], {%r54, %r54};
	st.local.v2.u32 	[%rd2+80], {%r54, %r54};
	st.local.v2.u32 	[%rd2+88], {%r54, %r54};
	st.local.v2.u32 	[%rd2+96], {%r54, %r54};
	st.local.v2.u32 	[%rd2+104], {%r54, %r54};
	st.local.v2.u32 	[%rd2+112], {%r54, %r54};
	st.local.v2.u32 	[%rd2+120], {%r54, %r54};
	st.local.v2.u32 	[%rd2+128], {%r54, %r54};
	st.local.v2.u32 	[%rd2+136], {%r54, %r54};
	st.local.v2.u32 	[%rd2+144], {%r54, %r54};
	st.local.v2.u32 	[%rd2+152], {%r54, %r54};
	st.local.v2.u32 	[%rd2+160], {%r54, %r54};
	st.local.v2.u32 	[%rd2+168], {%r54, %r54};
	st.local.v2.u32 	[%rd2+176], {%r54, %r54};
	st.local.v2.u32 	[%rd2+184], {%r54, %r54};
	st.local.v2.u32 	[%rd2+192], {%r54, %r54};

$L__BB1_4:
	.loc	1 216 21
	add.s64 	%rd91, %rd90, %rd256;
	ld.global.nc.u8 	%rs1, [%rd91];
	add.s64 	%rd92, %rd2, %rd256;
	st.local.u8 	[%rd92], %rs1;
	add.s64 	%rd256, %rd256, 1;
	add.s32 	%r54, %r54, 1;
	setp.lt.u32 	%p6, %r54, 32;
	@%p6 bra 	$L__BB1_4;

	.loc	1 0 21
	mov.u64 	%rd257, 0;

$L__BB1_6:
	.loc	1 216 21
	add.s64 	%rd96, %rd2, %rd257;
	add.s64 	%rd97, %rd1, %rd257;
	ld.u8 	%rs2, [%rd97];
	st.local.u8 	[%rd96+32], %rs2;
	add.s64 	%rd257, %rd257, 1;
	setp.lt.u64 	%p7, %rd257, 32;
	@%p7 bra 	$L__BB1_6;

	.loc	1 0 21
	mov.u64 	%rd258, 0;
	mov.u64 	%rd266, 1;
	.loc	1 232 9
	st.local.u64 	[%rd2+64], %rd266;
	mov.u64 	%rd274, -9223372036854775808;
	.loc	1 233 9
	st.local.u64 	[%rd2+128], %rd274;
	.loc	1 235 9
	.loc	1 161 9, function_name $L__info_string1, inlined_at 1 235 9
	ld.local.u64 	%rd282, [%rd2];
	.loc	1 54 21, function_name $L__info_string1, inlined_at 1 235 9
	ld.local.u64 	%rd281, [%rd2+40];
	.loc	1 55 21, function_name $L__info_string1, inlined_at 1 235 9
	ld.local.u64 	%rd277, [%rd2+8];
	ld.local.u64 	%rd276, [%rd2+48];
	.loc	1 56 21, function_name $L__info_string1, inlined_at 1 235 9
	ld.local.u64 	%rd272, [%rd2+16];
	ld.local.u64 	%rd271, [%rd2+56];
	.loc	1 57 21, function_name $L__info_string1, inlined_at 1 235 9
	ld.local.u64 	%rd267, [%rd2+24];
	.loc	1 124 9, function_name $L__info_string1, inlined_at 1 235 9
	ld.local.u64 	%rd262, [%rd2+32];
	mov.u32 	%r55, 0;
	mov.u64 	%rd259, %rd258;
	mov.u64 	%rd260, %rd258;
	mov.u64 	%rd261, %rd258;
	mov.u64 	%rd263, %rd258;
	mov.u64 	%rd264, %rd258;
	mov.u64 	%rd265, %rd258;
	mov.u64 	%rd268, %rd258;
	mov.u64 	%rd269, %rd258;
	mov.u64 	%rd270, %rd258;
	mov.u64 	%rd273, %rd258;
	mov.u64 	%rd275, %rd258;
	mov.u64 	%rd278, %rd258;
	mov.u64 	%rd279, %rd258;
	mov.u64 	%rd280, %rd258;

$L__BB1_8:
	.loc	1 54 21, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd173, %rd281, %rd282;
	xor.b64  	%rd174, %rd173, %rd280;
	xor.b64  	%rd175, %rd174, %rd279;
	xor.b64  	%rd124, %rd175, %rd278;
	.loc	1 55 21, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd176, %rd276, %rd277;
	xor.b64  	%rd177, %rd176, %rd275;
	xor.b64  	%rd178, %rd177, %rd274;
	xor.b64  	%rd116, %rd178, %rd273;
	.loc	1 56 21, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd179, %rd271, %rd272;
	xor.b64  	%rd180, %rd179, %rd270;
	xor.b64  	%rd181, %rd180, %rd269;
	xor.b64  	%rd118, %rd181, %rd268;
	.loc	1 57 21, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd182, %rd266, %rd267;
	xor.b64  	%rd183, %rd182, %rd265;
	xor.b64  	%rd184, %rd183, %rd264;
	xor.b64  	%rd120, %rd184, %rd263;
	.loc	1 58 21, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd185, %rd261, %rd262;
	xor.b64  	%rd186, %rd185, %rd260;
	xor.b64  	%rd187, %rd186, %rd259;
	xor.b64  	%rd122, %rd187, %rd258;
	.loc	1 60 22, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 60 22
	mov.u32 	%r22, 1;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd116;
	shf.l.wrap.b32 vl, tl, th, %r22;
	shf.l.wrap.b32 vh, th, tl, %r22;
	setp.lt.u32 p, %r22, 32;
	@!p mov.b64 %rd115, {vl,vh};
	@p  mov.b64 %rd115, {vh,vl};
	}

	// end inline asm
	.loc	1 60 22, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd188, %rd115, %rd122;
	.loc	1 61 22, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 61 22
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd118;
	shf.l.wrap.b32 vl, tl, th, %r22;
	shf.l.wrap.b32 vh, th, tl, %r22;
	setp.lt.u32 p, %r22, 32;
	@!p mov.b64 %rd117, {vl,vh};
	@p  mov.b64 %rd117, {vh,vl};
	}

	// end inline asm
	.loc	1 61 22, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd189, %rd117, %rd124;
	.loc	1 62 22, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 62 22
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd120;
	shf.l.wrap.b32 vl, tl, th, %r22;
	shf.l.wrap.b32 vh, th, tl, %r22;
	setp.lt.u32 p, %r22, 32;
	@!p mov.b64 %rd119, {vl,vh};
	@p  mov.b64 %rd119, {vh,vl};
	}

	// end inline asm
	.loc	1 62 22, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd190, %rd119, %rd116;
	.loc	1 63 22, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 63 22
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd122;
	shf.l.wrap.b32 vl, tl, th, %r22;
	shf.l.wrap.b32 vh, th, tl, %r22;
	setp.lt.u32 p, %r22, 32;
	@!p mov.b64 %rd121, {vl,vh};
	@p  mov.b64 %rd121, {vh,vl};
	}

	// end inline asm
	.loc	1 63 22, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd191, %rd121, %rd118;
	.loc	1 64 22, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 64 22
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd124;
	shf.l.wrap.b32 vl, tl, th, %r22;
	shf.l.wrap.b32 vh, th, tl, %r22;
	setp.lt.u32 p, %r22, 32;
	@!p mov.b64 %rd123, {vl,vh};
	@p  mov.b64 %rd123, {vh,vl};
	}

	// end inline asm
	.loc	1 64 22, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd192, %rd123, %rd120;
	.loc	1 66 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd193, %rd282, %rd188;
	.loc	1 67 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd160, %rd281, %rd188;
	.loc	1 68 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd172, %rd280, %rd188;
	.loc	1 69 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd148, %rd279, %rd188;
	.loc	1 70 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd136, %rd278, %rd188;
	.loc	1 71 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd126, %rd277, %rd189;
	.loc	1 72 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd128, %rd276, %rd189;
	.loc	1 73 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd168, %rd275, %rd189;
	.loc	1 74 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd158, %rd274, %rd189;
	.loc	1 75 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd154, %rd273, %rd189;
	.loc	1 76 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd138, %rd272, %rd190;
	.loc	1 77 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd170, %rd271, %rd190;
	.loc	1 78 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd140, %rd270, %rd190;
	.loc	1 79 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd166, %rd269, %rd190;
	.loc	1 80 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd132, %rd268, %rd190;
	.loc	1 81 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd162, %rd267, %rd191;
	.loc	1 82 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd156, %rd266, %rd191;
	.loc	1 83 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd142, %rd265, %rd191;
	.loc	1 84 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd164, %rd264, %rd191;
	.loc	1 85 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd146, %rd263, %rd191;
	.loc	1 86 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd150, %rd262, %rd192;
	.loc	1 87 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd130, %rd261, %rd192;
	.loc	1 88 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd134, %rd260, %rd192;
	.loc	1 89 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd144, %rd259, %rd192;
	.loc	1 90 9, function_name $L__info_string1, inlined_at 1 235 9
	xor.b64  	%rd152, %rd258, %rd192;
	.loc	1 93 14, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 93 14
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd126;
	shf.l.wrap.b32 vl, tl, th, %r22;
	shf.l.wrap.b32 vh, th, tl, %r22;
	setp.lt.u32 p, %r22, 32;
	@!p mov.b64 %rd125, {vl,vh};
	@p  mov.b64 %rd125, {vh,vl};
	}

	// end inline asm
	.loc	1 94 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 94 16
	mov.u32 	%r23, 44;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd128;
	shf.l.wrap.b32 vl, tl, th, %r23;
	shf.l.wrap.b32 vh, th, tl, %r23;
	setp.lt.u32 p, %r23, 32;
	@!p mov.b64 %rd127, {vl,vh};
	@p  mov.b64 %rd127, {vh,vl};
	}

	// end inline asm
	.loc	1 95 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 95 16
	mov.u32 	%r24, 20;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd130;
	shf.l.wrap.b32 vl, tl, th, %r24;
	shf.l.wrap.b32 vh, th, tl, %r24;
	setp.lt.u32 p, %r24, 32;
	@!p mov.b64 %rd129, {vl,vh};
	@p  mov.b64 %rd129, {vh,vl};
	}

	// end inline asm
	.loc	1 96 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 96 16
	mov.u32 	%r25, 61;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd132;
	shf.l.wrap.b32 vl, tl, th, %r25;
	shf.l.wrap.b32 vh, th, tl, %r25;
	setp.lt.u32 p, %r25, 32;
	@!p mov.b64 %rd131, {vl,vh};
	@p  mov.b64 %rd131, {vh,vl};
	}

	// end inline asm
	.loc	1 97 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 97 16
	mov.u32 	%r26, 39;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd134;
	shf.l.wrap.b32 vl, tl, th, %r26;
	shf.l.wrap.b32 vh, th, tl, %r26;
	setp.lt.u32 p, %r26, 32;
	@!p mov.b64 %rd133, {vl,vh};
	@p  mov.b64 %rd133, {vh,vl};
	}

	// end inline asm
	.loc	1 98 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 98 16
	mov.u32 	%r27, 18;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd136;
	shf.l.wrap.b32 vl, tl, th, %r27;
	shf.l.wrap.b32 vh, th, tl, %r27;
	setp.lt.u32 p, %r27, 32;
	@!p mov.b64 %rd135, {vl,vh};
	@p  mov.b64 %rd135, {vh,vl};
	}

	// end inline asm
	.loc	1 99 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 99 16
	mov.u32 	%r28, 62;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd138;
	shf.l.wrap.b32 vl, tl, th, %r28;
	shf.l.wrap.b32 vh, th, tl, %r28;
	setp.lt.u32 p, %r28, 32;
	@!p mov.b64 %rd137, {vl,vh};
	@p  mov.b64 %rd137, {vh,vl};
	}

	// end inline asm
	.loc	1 100 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 100 16
	mov.u32 	%r29, 43;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd140;
	shf.l.wrap.b32 vl, tl, th, %r29;
	shf.l.wrap.b32 vh, th, tl, %r29;
	setp.lt.u32 p, %r29, 32;
	@!p mov.b64 %rd139, {vl,vh};
	@p  mov.b64 %rd139, {vh,vl};
	}

	// end inline asm
	.loc	1 101 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 101 16
	mov.u32 	%r30, 25;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd142;
	shf.l.wrap.b32 vl, tl, th, %r30;
	shf.l.wrap.b32 vh, th, tl, %r30;
	setp.lt.u32 p, %r30, 32;
	@!p mov.b64 %rd141, {vl,vh};
	@p  mov.b64 %rd141, {vh,vl};
	}

	// end inline asm
	mov.u32 	%r31, 8;
	.loc	1 102 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 102 16
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd144;
	shf.l.wrap.b32 vl, tl, th, %r31;
	shf.l.wrap.b32 vh, th, tl, %r31;
	setp.lt.u32 p, %r31, 32;
	@!p mov.b64 %rd143, {vl,vh};
	@p  mov.b64 %rd143, {vh,vl};
	}

	// end inline asm
	.loc	1 103 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 103 16
	mov.u32 	%r32, 56;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd146;
	shf.l.wrap.b32 vl, tl, th, %r32;
	shf.l.wrap.b32 vh, th, tl, %r32;
	setp.lt.u32 p, %r32, 32;
	@!p mov.b64 %rd145, {vl,vh};
	@p  mov.b64 %rd145, {vh,vl};
	}

	// end inline asm
	.loc	1 104 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 104 16
	mov.u32 	%r33, 41;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd148;
	shf.l.wrap.b32 vl, tl, th, %r33;
	shf.l.wrap.b32 vh, th, tl, %r33;
	setp.lt.u32 p, %r33, 32;
	@!p mov.b64 %rd147, {vl,vh};
	@p  mov.b64 %rd147, {vh,vl};
	}

	// end inline asm
	.loc	1 105 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 105 16
	mov.u32 	%r34, 27;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd150;
	shf.l.wrap.b32 vl, tl, th, %r34;
	shf.l.wrap.b32 vh, th, tl, %r34;
	setp.lt.u32 p, %r34, 32;
	@!p mov.b64 %rd149, {vl,vh};
	@p  mov.b64 %rd149, {vh,vl};
	}

	// end inline asm
	.loc	1 106 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 106 16
	mov.u32 	%r35, 14;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd152;
	shf.l.wrap.b32 vl, tl, th, %r35;
	shf.l.wrap.b32 vh, th, tl, %r35;
	setp.lt.u32 p, %r35, 32;
	@!p mov.b64 %rd151, {vl,vh};
	@p  mov.b64 %rd151, {vh,vl};
	}

	// end inline asm
	.loc	1 107 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 107 16
	mov.u32 	%r36, 2;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd154;
	shf.l.wrap.b32 vl, tl, th, %r36;
	shf.l.wrap.b32 vh, th, tl, %r36;
	setp.lt.u32 p, %r36, 32;
	@!p mov.b64 %rd153, {vl,vh};
	@p  mov.b64 %rd153, {vh,vl};
	}

	// end inline asm
	.loc	1 108 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 108 16
	mov.u32 	%r37, 55;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd156;
	shf.l.wrap.b32 vl, tl, th, %r37;
	shf.l.wrap.b32 vh, th, tl, %r37;
	setp.lt.u32 p, %r37, 32;
	@!p mov.b64 %rd155, {vl,vh};
	@p  mov.b64 %rd155, {vh,vl};
	}

	// end inline asm
	.loc	1 109 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 109 16
	mov.u32 	%r38, 45;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd158;
	shf.l.wrap.b32 vl, tl, th, %r38;
	shf.l.wrap.b32 vh, th, tl, %r38;
	setp.lt.u32 p, %r38, 32;
	@!p mov.b64 %rd157, {vl,vh};
	@p  mov.b64 %rd157, {vh,vl};
	}

	// end inline asm
	.loc	1 110 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 110 16
	mov.u32 	%r39, 36;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd160;
	shf.l.wrap.b32 vl, tl, th, %r39;
	shf.l.wrap.b32 vh, th, tl, %r39;
	setp.lt.u32 p, %r39, 32;
	@!p mov.b64 %rd159, {vl,vh};
	@p  mov.b64 %rd159, {vh,vl};
	}

	// end inline asm
	.loc	1 111 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 111 16
	mov.u32 	%r40, 28;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd162;
	shf.l.wrap.b32 vl, tl, th, %r40;
	shf.l.wrap.b32 vh, th, tl, %r40;
	setp.lt.u32 p, %r40, 32;
	@!p mov.b64 %rd161, {vl,vh};
	@p  mov.b64 %rd161, {vh,vl};
	}

	// end inline asm
	.loc	1 112 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 112 16
	mov.u32 	%r41, 21;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd164;
	shf.l.wrap.b32 vl, tl, th, %r41;
	shf.l.wrap.b32 vh, th, tl, %r41;
	setp.lt.u32 p, %r41, 32;
	@!p mov.b64 %rd163, {vl,vh};
	@p  mov.b64 %rd163, {vh,vl};
	}

	// end inline asm
	.loc	1 113 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 113 16
	mov.u32 	%r42, 15;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd166;
	shf.l.wrap.b32 vl, tl, th, %r42;
	shf.l.wrap.b32 vh, th, tl, %r42;
	setp.lt.u32 p, %r42, 32;
	@!p mov.b64 %rd165, {vl,vh};
	@p  mov.b64 %rd165, {vh,vl};
	}

	// end inline asm
	.loc	1 114 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 114 16
	mov.u32 	%r43, 10;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd168;
	shf.l.wrap.b32 vl, tl, th, %r43;
	shf.l.wrap.b32 vh, th, tl, %r43;
	setp.lt.u32 p, %r43, 32;
	@!p mov.b64 %rd167, {vl,vh};
	@p  mov.b64 %rd167, {vh,vl};
	}

	// end inline asm
	.loc	1 115 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 115 16
	mov.u32 	%r44, 6;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd170;
	shf.l.wrap.b32 vl, tl, th, %r44;
	shf.l.wrap.b32 vh, th, tl, %r44;
	setp.lt.u32 p, %r44, 32;
	@!p mov.b64 %rd169, {vl,vh};
	@p  mov.b64 %rd169, {vh,vl};
	}

	// end inline asm
	.loc	1 116 16, function_name $L__info_string1, inlined_at 1 235 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 116 16
	mov.u32 	%r45, 3;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd172;
	shf.l.wrap.b32 vl, tl, th, %r45;
	shf.l.wrap.b32 vh, th, tl, %r45;
	setp.lt.u32 p, %r45, 32;
	@!p mov.b64 %rd171, {vl,vh};
	@p  mov.b64 %rd171, {vh,vl};
	}

	// end inline asm
	.loc	1 120 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd194, %rd127;
	and.b64  	%rd195, %rd139, %rd194;
	xor.b64  	%rd196, %rd195, %rd193;
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd197, %rd139;
	and.b64  	%rd198, %rd163, %rd197;
	xor.b64  	%rd277, %rd198, %rd127;
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd199, %rd163;
	and.b64  	%rd200, %rd151, %rd199;
	xor.b64  	%rd272, %rd139, %rd200;
	.loc	1 123 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd201, %rd151;
	and.b64  	%rd202, %rd193, %rd201;
	xor.b64  	%rd267, %rd163, %rd202;
	.loc	1 124 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd203, %rd193;
	and.b64  	%rd204, %rd127, %rd203;
	xor.b64  	%rd262, %rd151, %rd204;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd205, %rd129;
	and.b64  	%rd206, %rd171, %rd205;
	xor.b64  	%rd281, %rd206, %rd161;
	.loc	1 129 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd207, %rd171;
	and.b64  	%rd208, %rd157, %rd207;
	xor.b64  	%rd276, %rd208, %rd129;
	.loc	1 130 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd209, %rd157;
	and.b64  	%rd210, %rd131, %rd209;
	xor.b64  	%rd271, %rd171, %rd210;
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd211, %rd131;
	and.b64  	%rd212, %rd161, %rd211;
	xor.b64  	%rd266, %rd157, %rd212;
	.loc	1 132 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd213, %rd161;
	and.b64  	%rd214, %rd129, %rd213;
	xor.b64  	%rd261, %rd131, %rd214;
	.loc	1 136 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd215, %rd169;
	and.b64  	%rd216, %rd141, %rd215;
	xor.b64  	%rd280, %rd216, %rd125;
	.loc	1 137 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd217, %rd141;
	and.b64  	%rd218, %rd143, %rd217;
	xor.b64  	%rd275, %rd218, %rd169;
	.loc	1 138 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd219, %rd143;
	and.b64  	%rd220, %rd135, %rd219;
	xor.b64  	%rd270, %rd141, %rd220;
	.loc	1 139 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd221, %rd135;
	and.b64  	%rd222, %rd125, %rd221;
	xor.b64  	%rd265, %rd143, %rd222;
	.loc	1 140 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd223, %rd125;
	and.b64  	%rd224, %rd169, %rd223;
	xor.b64  	%rd260, %rd135, %rd224;
	.loc	1 144 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd225, %rd159;
	and.b64  	%rd226, %rd167, %rd225;
	xor.b64  	%rd279, %rd226, %rd149;
	.loc	1 145 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd227, %rd167;
	and.b64  	%rd228, %rd165, %rd227;
	xor.b64  	%rd274, %rd228, %rd159;
	.loc	1 146 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd229, %rd165;
	and.b64  	%rd230, %rd145, %rd229;
	xor.b64  	%rd269, %rd167, %rd230;
	.loc	1 147 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd231, %rd145;
	and.b64  	%rd232, %rd149, %rd231;
	xor.b64  	%rd264, %rd165, %rd232;
	.loc	1 148 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd233, %rd149;
	and.b64  	%rd234, %rd159, %rd233;
	xor.b64  	%rd259, %rd145, %rd234;
	.loc	1 152 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd235, %rd155;
	and.b64  	%rd236, %rd133, %rd235;
	xor.b64  	%rd278, %rd236, %rd137;
	.loc	1 153 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd237, %rd133;
	and.b64  	%rd238, %rd147, %rd237;
	xor.b64  	%rd273, %rd238, %rd155;
	.loc	1 154 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd239, %rd147;
	and.b64  	%rd240, %rd153, %rd239;
	xor.b64  	%rd268, %rd133, %rd240;
	.loc	1 155 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd241, %rd153;
	and.b64  	%rd242, %rd137, %rd241;
	xor.b64  	%rd263, %rd147, %rd242;
	.loc	1 156 9, function_name $L__info_string1, inlined_at 1 235 9
	not.b64 	%rd243, %rd137;
	and.b64  	%rd244, %rd155, %rd243;
	xor.b64  	%rd258, %rd153, %rd244;
	.loc	1 161 9, function_name $L__info_string1, inlined_at 1 235 9
	mul.wide.s32 	%rd245, %r55, 8;
	mov.u64 	%rd246, CUDA_KECCAK_CONSTS;
	add.s64 	%rd247, %rd246, %rd245;
	ld.const.u64 	%rd248, [%rd247];
	xor.b64  	%rd282, %rd196, %rd248;
	.loc	1 50 29, function_name $L__info_string1, inlined_at 1 235 9
	add.s32 	%r55, %r55, 1;
	.loc	1 50 5, function_name $L__info_string1, inlined_at 1 235 9
	setp.ne.s32 	%p8, %r55, 24;
	@%p8 bra 	$L__BB1_8;

	.loc	1 0 5
	ld.param.u64 	%rd255, [kernel_lilypad_pow_param_2];
	add.u64 	%rd254, %SP, 0;
	.loc	1 161 9, function_name $L__info_string1, inlined_at 1 235 9
	st.local.u64 	[%rd2], %rd282;
	.loc	1 54 21, function_name $L__info_string1, inlined_at 1 235 9
	st.local.u64 	[%rd2+40], %rd281;
	st.local.u64 	[%rd2+80], %rd280;
	st.local.u64 	[%rd2+120], %rd279;
	st.local.u64 	[%rd2+160], %rd278;
	.loc	1 55 21, function_name $L__info_string1, inlined_at 1 235 9
	st.local.u64 	[%rd2+8], %rd277;
	st.local.u64 	[%rd2+48], %rd276;
	st.local.u64 	[%rd2+88], %rd275;
	.loc	1 150 9, function_name $L__info_string1, inlined_at 1 235 9
	st.local.u64 	[%rd2+128], %rd274;
	.loc	1 55 21, function_name $L__info_string1, inlined_at 1 235 9
	st.local.u64 	[%rd2+168], %rd273;
	.loc	1 56 21, function_name $L__info_string1, inlined_at 1 235 9
	st.local.u64 	[%rd2+16], %rd272;
	st.local.u64 	[%rd2+56], %rd271;
	st.local.u64 	[%rd2+96], %rd270;
	st.local.u64 	[%rd2+136], %rd269;
	st.local.u64 	[%rd2+176], %rd268;
	.loc	1 57 21, function_name $L__info_string1, inlined_at 1 235 9
	st.local.u64 	[%rd2+24], %rd267;
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 235 9
	st.local.u64 	[%rd2+64], %rd266;
	.loc	1 57 21, function_name $L__info_string1, inlined_at 1 235 9
	st.local.u64 	[%rd2+104], %rd265;
	st.local.u64 	[%rd2+144], %rd264;
	st.local.u64 	[%rd2+184], %rd263;
	.loc	1 124 9, function_name $L__info_string1, inlined_at 1 235 9
	st.local.u64 	[%rd2+32], %rd262;
	.loc	1 58 21, function_name $L__info_string1, inlined_at 1 235 9
	st.local.u64 	[%rd2+72], %rd261;
	st.local.u64 	[%rd2+112], %rd260;
	st.local.u64 	[%rd2+152], %rd259;
	st.local.u64 	[%rd2+192], %rd258;
	.loc	1 238 13
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd254;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd255;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN39_INTERNAL_9445990f_9_keccak_cu_bbb2fa6e15hashbelowtargetEPKhS1_, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r46, [retval0+0];
	} // callseq 1
	cvt.u16.u32 	%rs3, %r46;
	setp.eq.s16 	%p9, %rs3, 0;
	@%p9 bra 	$L__BB1_12;

	.loc	1 0 13
	mov.u64 	%rd283, 0;

$L__BB1_11:
	add.s64 	%rd252, %rd1, %rd283;
	ld.u8 	%rs4, [%rd252];
	add.s64 	%rd253, %rd65, %rd283;
	st.global.u8 	[%rd253], %rs4;
	add.s64 	%rd283, %rd283, 1;
	setp.lt.u64 	%p10, %rd283, 32;
	@%p10 bra 	$L__BB1_11;

$L__BB1_12:
	ld.param.u32 	%r52, [kernel_lilypad_pow_param_4];
	.loc	1 243 9
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd1;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 2
	.loc	1 222 5
	mad.lo.s32 	%r51, %r1, %r52, %r52;
	.loc	1 222 76
	add.s32 	%r53, %r53, 1;
	.loc	1 222 5
	setp.lt.u32 	%p11, %r53, %r51;
	@%p11 bra 	$L__BB1_3;

$L__BB1_13:
	.loc	1 245 1
	ret;

}
	// .globl	kernel_lilypad_pow_debug
.visible .entry kernel_lilypad_pow_debug(
	.param .u64 kernel_lilypad_pow_debug_param_0,
	.param .u64 kernel_lilypad_pow_debug_param_1,
	.param .u64 kernel_lilypad_pow_debug_param_2,
	.param .u32 kernel_lilypad_pow_debug_param_3,
	.param .u32 kernel_lilypad_pow_debug_param_4,
	.param .u64 kernel_lilypad_pow_debug_param_5,
	.param .u64 kernel_lilypad_pow_debug_param_6,
	.param .u64 kernel_lilypad_pow_debug_param_7
)
.maxntid 1024, 1, 1
{
	.local .align 8 .b8 	__local_depot2[200];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<109>;
	.reg .b32 	%r<72>;
	.reg .b64 	%rd<294>;
	.loc	1 247 0


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd72, [kernel_lilypad_pow_debug_param_0];
	ld.param.u64 	%rd73, [kernel_lilypad_pow_debug_param_1];
	ld.param.u32 	%r10, [kernel_lilypad_pow_debug_param_3];
	ld.param.u32 	%r9, [kernel_lilypad_pow_debug_param_4];
	ld.param.u64 	%rd75, [kernel_lilypad_pow_debug_param_5];
	ld.param.u64 	%rd76, [kernel_lilypad_pow_debug_param_6];
	ld.param.u64 	%rd77, [kernel_lilypad_pow_debug_param_7];
	.loc	1 254 21
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r12, %r11, %r13;
	.loc	1 255 5
	setp.ge.u32 	%p1, %r1, %r10;
	@%p1 bra 	$L__BB2_15;

	.loc	1 260 16
	mul.lo.s32 	%r69, %r1, %r9;
	.loc	1 260 5
	add.s32 	%r14, %r69, %r9;
	setp.ge.u32 	%p2, %r69, %r14;
	@%p2 bra 	$L__BB2_15;

	.loc	1 0 5
	cvta.to.global.u64 	%rd80, %rd73;
	add.u64 	%rd2, %SPL, 0;
	cvta.to.global.u64 	%rd96, %rd72;
	cvta.to.global.u64 	%rd66, %rd76;
	cvta.to.global.u64 	%rd260, %rd77;
	cvta.to.global.u64 	%rd69, %rd75;

$L__BB2_3:
	mov.u64 	%rd79, 32;
	.loc	1 263 37
	.loc	1 183 22, function_name $L__info_string0, inlined_at 1 263 37
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd79;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64 	%rd1, [retval0+0];
	} // callseq 3
	.loc	1 184 18, function_name $L__info_string0, inlined_at 1 263 37
	ld.global.nc.u64 	%rd81, [%rd80];
	.loc	1 263 24
	cvt.s64.s32 	%rd82, %r69;
	add.s64 	%rd83, %rd81, %rd82;
	setp.lt.u64 	%p3, %rd83, %rd81;
	mov.u64 	%rd265, 0;
	.loc	1 185 5, function_name $L__info_string0, inlined_at 1 263 37
	st.u64 	[%rd1], %rd83;
	.loc	1 188 5, function_name $L__info_string0, inlined_at 1 263 37
	selp.u64 	%rd84, 1, 0, %p3;
	.loc	1 190 9, function_name $L__info_string0, inlined_at 1 263 37
	ld.global.nc.u64 	%rd85, [%rd80+8];
	add.s64 	%rd86, %rd85, %rd84;
	setp.lt.u64 	%p4, %rd86, %rd85;
	.loc	1 191 9, function_name $L__info_string0, inlined_at 1 263 37
	st.u64 	[%rd1+8], %rd86;
	.loc	1 188 5, function_name $L__info_string0, inlined_at 1 263 37
	selp.u64 	%rd87, 1, 0, %p4;
	.loc	1 190 9, function_name $L__info_string0, inlined_at 1 263 37
	ld.global.nc.u64 	%rd88, [%rd80+16];
	add.s64 	%rd89, %rd88, %rd87;
	setp.lt.u64 	%p5, %rd89, %rd88;
	.loc	1 191 9, function_name $L__info_string0, inlined_at 1 263 37
	st.u64 	[%rd1+16], %rd89;
	.loc	1 188 5, function_name $L__info_string0, inlined_at 1 263 37
	selp.u64 	%rd90, 1, 0, %p5;
	.loc	1 190 9, function_name $L__info_string0, inlined_at 1 263 37
	ld.global.nc.u64 	%rd91, [%rd80+24];
	add.s64 	%rd92, %rd91, %rd90;
	.loc	1 191 9, function_name $L__info_string0, inlined_at 1 263 37
	st.u64 	[%rd1+24], %rd92;
	mov.u32 	%r70, 0;
	.loc	1 265 9
	st.local.v2.u32 	[%rd2+72], {%r70, %r70};
	st.local.v2.u32 	[%rd2+80], {%r70, %r70};
	st.local.v2.u32 	[%rd2+88], {%r70, %r70};
	st.local.v2.u32 	[%rd2+96], {%r70, %r70};
	st.local.v2.u32 	[%rd2+104], {%r70, %r70};
	st.local.v2.u32 	[%rd2+112], {%r70, %r70};
	st.local.v2.u32 	[%rd2+120], {%r70, %r70};
	st.local.v2.u32 	[%rd2+128], {%r70, %r70};
	st.local.v2.u32 	[%rd2+136], {%r70, %r70};
	st.local.v2.u32 	[%rd2+144], {%r70, %r70};
	st.local.v2.u32 	[%rd2+152], {%r70, %r70};
	st.local.v2.u32 	[%rd2+160], {%r70, %r70};
	st.local.v2.u32 	[%rd2+168], {%r70, %r70};
	st.local.v2.u32 	[%rd2+176], {%r70, %r70};
	st.local.v2.u32 	[%rd2+184], {%r70, %r70};
	st.local.v2.u32 	[%rd2+192], {%r70, %r70};

$L__BB2_4:
	.loc	1 254 21
	add.s64 	%rd97, %rd96, %rd265;
	ld.global.nc.u8 	%rs40, [%rd97];
	add.s64 	%rd98, %rd2, %rd265;
	st.local.u8 	[%rd98], %rs40;
	add.s64 	%rd265, %rd265, 1;
	add.s32 	%r70, %r70, 1;
	setp.lt.u32 	%p6, %r70, 32;
	@%p6 bra 	$L__BB2_4;

	.loc	1 0 21
	mov.u64 	%rd266, 0;

$L__BB2_6:
	.loc	1 254 21
	add.s64 	%rd102, %rd2, %rd266;
	add.s64 	%rd103, %rd1, %rd266;
	ld.u8 	%rs41, [%rd103];
	st.local.u8 	[%rd102+32], %rs41;
	add.s64 	%rd266, %rd266, 1;
	setp.lt.u64 	%p7, %rd266, 32;
	@%p7 bra 	$L__BB2_6;

	.loc	1 271 9
	ld.local.v4.u16 	{%rs42, %rs43, %rs44, %rs45}, [%rd2];
	mov.b32 	%r17, {%rs44, %rs45};
	mov.b32 	%r18, {%rs42, %rs43};
	mov.u64 	%rd267, 0;
	mov.u64 	%rd275, 1;
	ld.local.u8 	%rs5, [%rd2+8];
	ld.local.v4.u16 	{%rs46, %rs47, %rs48, %rs49}, [%rd2+8];
	mov.b32 	%r19, {%rs48, %rs49};
	mov.b32 	%r20, {%rs46, %rs47};
	ld.local.u8 	%rs10, [%rd2+16];
	ld.local.v4.u16 	{%rs50, %rs51, %rs52, %rs53}, [%rd2+16];
	mov.b32 	%r21, {%rs52, %rs53};
	mov.b32 	%r22, {%rs50, %rs51};
	ld.local.u8 	%rs15, [%rd2+24];
	ld.local.v4.u16 	{%rs54, %rs55, %rs56, %rs57}, [%rd2+24];
	mov.b32 	%r23, {%rs56, %rs57};
	mov.b32 	%r24, {%rs54, %rs55};
	ld.local.u8 	%rs20, [%rd2+32];
	ld.local.v4.u16 	{%rs58, %rs59, %rs60, %rs61}, [%rd2+32];
	mov.b32 	%r25, {%rs60, %rs61};
	mov.b32 	%r26, {%rs58, %rs59};
	ld.local.u8 	%rs25, [%rd2+40];
	ld.local.v4.u16 	{%rs62, %rs63, %rs64, %rs65}, [%rd2+40];
	mov.b32 	%r27, {%rs64, %rs65};
	mov.b32 	%r28, {%rs62, %rs63};
	ld.local.u8 	%rs30, [%rd2+48];
	ld.local.v4.u16 	{%rs66, %rs67, %rs68, %rs69}, [%rd2+48];
	mov.b32 	%r29, {%rs68, %rs69};
	mov.b32 	%r30, {%rs66, %rs67};
	ld.local.u8 	%rs35, [%rd2+56];
	ld.local.v4.u16 	{%rs70, %rs71, %rs72, %rs73}, [%rd2+56];
	mov.b32 	%r31, {%rs72, %rs73};
	mov.b32 	%r32, {%rs70, %rs71};
	.loc	1 273 9
	st.local.u64 	[%rd2+64], %rd275;
	mov.u64 	%rd283, -9223372036854775808;
	.loc	1 274 9
	st.local.u64 	[%rd2+128], %rd283;
	.loc	1 271 9
	mov.b64 	%rd291, {%r18, %r17};
	mov.b64 	%rd290, {%r28, %r27};
	mov.b64 	%rd286, {%r20, %r19};
	mov.b64 	%rd285, {%r30, %r29};
	mov.b64 	%rd281, {%r22, %r21};
	mov.b64 	%rd280, {%r32, %r31};
	mov.b64 	%rd276, {%r24, %r23};
	mov.b64 	%rd271, {%r26, %r25};
	mov.u32 	%r71, 0;
	mov.u64 	%rd268, %rd267;
	mov.u64 	%rd269, %rd267;
	mov.u64 	%rd270, %rd267;
	mov.u64 	%rd272, %rd267;
	mov.u64 	%rd273, %rd267;
	mov.u64 	%rd274, %rd267;
	mov.u64 	%rd277, %rd267;
	mov.u64 	%rd278, %rd267;
	mov.u64 	%rd279, %rd267;
	mov.u64 	%rd282, %rd267;
	mov.u64 	%rd284, %rd267;
	mov.u64 	%rd287, %rd267;
	mov.u64 	%rd288, %rd267;
	mov.u64 	%rd289, %rd267;

$L__BB2_8:
	.loc	1 276 9
	.loc	1 54 21, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd179, %rd290, %rd291;
	xor.b64  	%rd180, %rd179, %rd289;
	xor.b64  	%rd181, %rd180, %rd288;
	xor.b64  	%rd130, %rd181, %rd287;
	.loc	1 55 21, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd182, %rd285, %rd286;
	xor.b64  	%rd183, %rd182, %rd284;
	xor.b64  	%rd184, %rd183, %rd283;
	xor.b64  	%rd122, %rd184, %rd282;
	.loc	1 56 21, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd185, %rd280, %rd281;
	xor.b64  	%rd186, %rd185, %rd279;
	xor.b64  	%rd187, %rd186, %rd278;
	xor.b64  	%rd124, %rd187, %rd277;
	.loc	1 57 21, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd188, %rd275, %rd276;
	xor.b64  	%rd189, %rd188, %rd274;
	xor.b64  	%rd190, %rd189, %rd273;
	xor.b64  	%rd126, %rd190, %rd272;
	.loc	1 58 21, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd191, %rd270, %rd271;
	xor.b64  	%rd192, %rd191, %rd269;
	xor.b64  	%rd193, %rd192, %rd268;
	xor.b64  	%rd128, %rd193, %rd267;
	.loc	1 60 22, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 60 22
	mov.u32 	%r38, 1;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd122;
	shf.l.wrap.b32 vl, tl, th, %r38;
	shf.l.wrap.b32 vh, th, tl, %r38;
	setp.lt.u32 p, %r38, 32;
	@!p mov.b64 %rd121, {vl,vh};
	@p  mov.b64 %rd121, {vh,vl};
	}

	// end inline asm
	.loc	1 60 22, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd194, %rd121, %rd128;
	.loc	1 61 22, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 61 22
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd124;
	shf.l.wrap.b32 vl, tl, th, %r38;
	shf.l.wrap.b32 vh, th, tl, %r38;
	setp.lt.u32 p, %r38, 32;
	@!p mov.b64 %rd123, {vl,vh};
	@p  mov.b64 %rd123, {vh,vl};
	}

	// end inline asm
	.loc	1 61 22, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd195, %rd123, %rd130;
	.loc	1 62 22, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 62 22
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd126;
	shf.l.wrap.b32 vl, tl, th, %r38;
	shf.l.wrap.b32 vh, th, tl, %r38;
	setp.lt.u32 p, %r38, 32;
	@!p mov.b64 %rd125, {vl,vh};
	@p  mov.b64 %rd125, {vh,vl};
	}

	// end inline asm
	.loc	1 62 22, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd196, %rd125, %rd122;
	.loc	1 63 22, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 63 22
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd128;
	shf.l.wrap.b32 vl, tl, th, %r38;
	shf.l.wrap.b32 vh, th, tl, %r38;
	setp.lt.u32 p, %r38, 32;
	@!p mov.b64 %rd127, {vl,vh};
	@p  mov.b64 %rd127, {vh,vl};
	}

	// end inline asm
	.loc	1 63 22, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd197, %rd127, %rd124;
	.loc	1 64 22, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 64 22
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd130;
	shf.l.wrap.b32 vl, tl, th, %r38;
	shf.l.wrap.b32 vh, th, tl, %r38;
	setp.lt.u32 p, %r38, 32;
	@!p mov.b64 %rd129, {vl,vh};
	@p  mov.b64 %rd129, {vh,vl};
	}

	// end inline asm
	.loc	1 64 22, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd198, %rd129, %rd126;
	.loc	1 66 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd199, %rd291, %rd194;
	.loc	1 67 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd166, %rd290, %rd194;
	.loc	1 68 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd178, %rd289, %rd194;
	.loc	1 69 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd154, %rd288, %rd194;
	.loc	1 70 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd142, %rd287, %rd194;
	.loc	1 71 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd132, %rd286, %rd195;
	.loc	1 72 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd134, %rd285, %rd195;
	.loc	1 73 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd174, %rd284, %rd195;
	.loc	1 74 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd164, %rd283, %rd195;
	.loc	1 75 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd160, %rd282, %rd195;
	.loc	1 76 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd144, %rd281, %rd196;
	.loc	1 77 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd176, %rd280, %rd196;
	.loc	1 78 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd146, %rd279, %rd196;
	.loc	1 79 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd172, %rd278, %rd196;
	.loc	1 80 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd138, %rd277, %rd196;
	.loc	1 81 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd168, %rd276, %rd197;
	.loc	1 82 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd162, %rd275, %rd197;
	.loc	1 83 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd148, %rd274, %rd197;
	.loc	1 84 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd170, %rd273, %rd197;
	.loc	1 85 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd152, %rd272, %rd197;
	.loc	1 86 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd156, %rd271, %rd198;
	.loc	1 87 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd136, %rd270, %rd198;
	.loc	1 88 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd140, %rd269, %rd198;
	.loc	1 89 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd150, %rd268, %rd198;
	.loc	1 90 9, function_name $L__info_string1, inlined_at 1 276 9
	xor.b64  	%rd158, %rd267, %rd198;
	.loc	1 93 14, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 93 14
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd132;
	shf.l.wrap.b32 vl, tl, th, %r38;
	shf.l.wrap.b32 vh, th, tl, %r38;
	setp.lt.u32 p, %r38, 32;
	@!p mov.b64 %rd131, {vl,vh};
	@p  mov.b64 %rd131, {vh,vl};
	}

	// end inline asm
	.loc	1 94 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 94 16
	mov.u32 	%r39, 44;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd134;
	shf.l.wrap.b32 vl, tl, th, %r39;
	shf.l.wrap.b32 vh, th, tl, %r39;
	setp.lt.u32 p, %r39, 32;
	@!p mov.b64 %rd133, {vl,vh};
	@p  mov.b64 %rd133, {vh,vl};
	}

	// end inline asm
	.loc	1 95 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 95 16
	mov.u32 	%r40, 20;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd136;
	shf.l.wrap.b32 vl, tl, th, %r40;
	shf.l.wrap.b32 vh, th, tl, %r40;
	setp.lt.u32 p, %r40, 32;
	@!p mov.b64 %rd135, {vl,vh};
	@p  mov.b64 %rd135, {vh,vl};
	}

	// end inline asm
	.loc	1 96 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 96 16
	mov.u32 	%r41, 61;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd138;
	shf.l.wrap.b32 vl, tl, th, %r41;
	shf.l.wrap.b32 vh, th, tl, %r41;
	setp.lt.u32 p, %r41, 32;
	@!p mov.b64 %rd137, {vl,vh};
	@p  mov.b64 %rd137, {vh,vl};
	}

	// end inline asm
	.loc	1 97 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 97 16
	mov.u32 	%r42, 39;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd140;
	shf.l.wrap.b32 vl, tl, th, %r42;
	shf.l.wrap.b32 vh, th, tl, %r42;
	setp.lt.u32 p, %r42, 32;
	@!p mov.b64 %rd139, {vl,vh};
	@p  mov.b64 %rd139, {vh,vl};
	}

	// end inline asm
	.loc	1 98 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 98 16
	mov.u32 	%r43, 18;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd142;
	shf.l.wrap.b32 vl, tl, th, %r43;
	shf.l.wrap.b32 vh, th, tl, %r43;
	setp.lt.u32 p, %r43, 32;
	@!p mov.b64 %rd141, {vl,vh};
	@p  mov.b64 %rd141, {vh,vl};
	}

	// end inline asm
	.loc	1 99 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 99 16
	mov.u32 	%r44, 62;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd144;
	shf.l.wrap.b32 vl, tl, th, %r44;
	shf.l.wrap.b32 vh, th, tl, %r44;
	setp.lt.u32 p, %r44, 32;
	@!p mov.b64 %rd143, {vl,vh};
	@p  mov.b64 %rd143, {vh,vl};
	}

	// end inline asm
	.loc	1 100 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 100 16
	mov.u32 	%r45, 43;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd146;
	shf.l.wrap.b32 vl, tl, th, %r45;
	shf.l.wrap.b32 vh, th, tl, %r45;
	setp.lt.u32 p, %r45, 32;
	@!p mov.b64 %rd145, {vl,vh};
	@p  mov.b64 %rd145, {vh,vl};
	}

	// end inline asm
	.loc	1 101 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 101 16
	mov.u32 	%r46, 25;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd148;
	shf.l.wrap.b32 vl, tl, th, %r46;
	shf.l.wrap.b32 vh, th, tl, %r46;
	setp.lt.u32 p, %r46, 32;
	@!p mov.b64 %rd147, {vl,vh};
	@p  mov.b64 %rd147, {vh,vl};
	}

	// end inline asm
	mov.u32 	%r47, 8;
	.loc	1 102 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 102 16
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd150;
	shf.l.wrap.b32 vl, tl, th, %r47;
	shf.l.wrap.b32 vh, th, tl, %r47;
	setp.lt.u32 p, %r47, 32;
	@!p mov.b64 %rd149, {vl,vh};
	@p  mov.b64 %rd149, {vh,vl};
	}

	// end inline asm
	.loc	1 103 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 103 16
	mov.u32 	%r48, 56;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd152;
	shf.l.wrap.b32 vl, tl, th, %r48;
	shf.l.wrap.b32 vh, th, tl, %r48;
	setp.lt.u32 p, %r48, 32;
	@!p mov.b64 %rd151, {vl,vh};
	@p  mov.b64 %rd151, {vh,vl};
	}

	// end inline asm
	.loc	1 104 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 104 16
	mov.u32 	%r49, 41;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd154;
	shf.l.wrap.b32 vl, tl, th, %r49;
	shf.l.wrap.b32 vh, th, tl, %r49;
	setp.lt.u32 p, %r49, 32;
	@!p mov.b64 %rd153, {vl,vh};
	@p  mov.b64 %rd153, {vh,vl};
	}

	// end inline asm
	.loc	1 105 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 105 16
	mov.u32 	%r50, 27;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd156;
	shf.l.wrap.b32 vl, tl, th, %r50;
	shf.l.wrap.b32 vh, th, tl, %r50;
	setp.lt.u32 p, %r50, 32;
	@!p mov.b64 %rd155, {vl,vh};
	@p  mov.b64 %rd155, {vh,vl};
	}

	// end inline asm
	.loc	1 106 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 106 16
	mov.u32 	%r51, 14;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd158;
	shf.l.wrap.b32 vl, tl, th, %r51;
	shf.l.wrap.b32 vh, th, tl, %r51;
	setp.lt.u32 p, %r51, 32;
	@!p mov.b64 %rd157, {vl,vh};
	@p  mov.b64 %rd157, {vh,vl};
	}

	// end inline asm
	.loc	1 107 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 107 16
	mov.u32 	%r52, 2;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd160;
	shf.l.wrap.b32 vl, tl, th, %r52;
	shf.l.wrap.b32 vh, th, tl, %r52;
	setp.lt.u32 p, %r52, 32;
	@!p mov.b64 %rd159, {vl,vh};
	@p  mov.b64 %rd159, {vh,vl};
	}

	// end inline asm
	.loc	1 108 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 108 16
	mov.u32 	%r53, 55;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd162;
	shf.l.wrap.b32 vl, tl, th, %r53;
	shf.l.wrap.b32 vh, th, tl, %r53;
	setp.lt.u32 p, %r53, 32;
	@!p mov.b64 %rd161, {vl,vh};
	@p  mov.b64 %rd161, {vh,vl};
	}

	// end inline asm
	.loc	1 109 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 109 16
	mov.u32 	%r54, 45;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd164;
	shf.l.wrap.b32 vl, tl, th, %r54;
	shf.l.wrap.b32 vh, th, tl, %r54;
	setp.lt.u32 p, %r54, 32;
	@!p mov.b64 %rd163, {vl,vh};
	@p  mov.b64 %rd163, {vh,vl};
	}

	// end inline asm
	.loc	1 110 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 110 16
	mov.u32 	%r55, 36;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd166;
	shf.l.wrap.b32 vl, tl, th, %r55;
	shf.l.wrap.b32 vh, th, tl, %r55;
	setp.lt.u32 p, %r55, 32;
	@!p mov.b64 %rd165, {vl,vh};
	@p  mov.b64 %rd165, {vh,vl};
	}

	// end inline asm
	.loc	1 111 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 111 16
	mov.u32 	%r56, 28;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd168;
	shf.l.wrap.b32 vl, tl, th, %r56;
	shf.l.wrap.b32 vh, th, tl, %r56;
	setp.lt.u32 p, %r56, 32;
	@!p mov.b64 %rd167, {vl,vh};
	@p  mov.b64 %rd167, {vh,vl};
	}

	// end inline asm
	.loc	1 112 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 112 16
	mov.u32 	%r57, 21;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd170;
	shf.l.wrap.b32 vl, tl, th, %r57;
	shf.l.wrap.b32 vh, th, tl, %r57;
	setp.lt.u32 p, %r57, 32;
	@!p mov.b64 %rd169, {vl,vh};
	@p  mov.b64 %rd169, {vh,vl};
	}

	// end inline asm
	.loc	1 113 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 113 16
	mov.u32 	%r58, 15;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd172;
	shf.l.wrap.b32 vl, tl, th, %r58;
	shf.l.wrap.b32 vh, th, tl, %r58;
	setp.lt.u32 p, %r58, 32;
	@!p mov.b64 %rd171, {vl,vh};
	@p  mov.b64 %rd171, {vh,vl};
	}

	// end inline asm
	.loc	1 114 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 114 16
	mov.u32 	%r59, 10;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd174;
	shf.l.wrap.b32 vl, tl, th, %r59;
	shf.l.wrap.b32 vh, th, tl, %r59;
	setp.lt.u32 p, %r59, 32;
	@!p mov.b64 %rd173, {vl,vh};
	@p  mov.b64 %rd173, {vh,vl};
	}

	// end inline asm
	.loc	1 115 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 115 16
	mov.u32 	%r60, 6;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd176;
	shf.l.wrap.b32 vl, tl, th, %r60;
	shf.l.wrap.b32 vh, th, tl, %r60;
	setp.lt.u32 p, %r60, 32;
	@!p mov.b64 %rd175, {vl,vh};
	@p  mov.b64 %rd175, {vh,vl};
	}

	// end inline asm
	.loc	1 116 16, function_name $L__info_string1, inlined_at 1 276 9
	.loc	1 29 5, function_name $L__info_string2, inlined_at 1 116 16
	mov.u32 	%r61, 3;
	// begin inline asm
	{ // ROTL64 
	.reg .u32 tl,th,vl,vh;
	.reg .pred p;
	mov.b64 {tl,th}, %rd178;
	shf.l.wrap.b32 vl, tl, th, %r61;
	shf.l.wrap.b32 vh, th, tl, %r61;
	setp.lt.u32 p, %r61, 32;
	@!p mov.b64 %rd177, {vl,vh};
	@p  mov.b64 %rd177, {vh,vl};
	}

	// end inline asm
	.loc	1 120 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd200, %rd133;
	and.b64  	%rd201, %rd145, %rd200;
	xor.b64  	%rd202, %rd201, %rd199;
	.loc	1 121 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd203, %rd145;
	and.b64  	%rd204, %rd169, %rd203;
	xor.b64  	%rd286, %rd204, %rd133;
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd205, %rd169;
	and.b64  	%rd206, %rd157, %rd205;
	xor.b64  	%rd281, %rd145, %rd206;
	.loc	1 123 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd207, %rd157;
	and.b64  	%rd208, %rd199, %rd207;
	xor.b64  	%rd276, %rd169, %rd208;
	.loc	1 124 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd209, %rd199;
	and.b64  	%rd210, %rd133, %rd209;
	xor.b64  	%rd271, %rd157, %rd210;
	.loc	1 128 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd211, %rd135;
	and.b64  	%rd212, %rd177, %rd211;
	xor.b64  	%rd290, %rd212, %rd167;
	.loc	1 129 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd213, %rd177;
	and.b64  	%rd214, %rd163, %rd213;
	xor.b64  	%rd285, %rd214, %rd135;
	.loc	1 130 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd215, %rd163;
	and.b64  	%rd216, %rd137, %rd215;
	xor.b64  	%rd280, %rd177, %rd216;
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd217, %rd137;
	and.b64  	%rd218, %rd167, %rd217;
	xor.b64  	%rd275, %rd163, %rd218;
	.loc	1 132 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd219, %rd167;
	and.b64  	%rd220, %rd135, %rd219;
	xor.b64  	%rd270, %rd137, %rd220;
	.loc	1 136 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd221, %rd175;
	and.b64  	%rd222, %rd147, %rd221;
	xor.b64  	%rd289, %rd222, %rd131;
	.loc	1 137 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd223, %rd147;
	and.b64  	%rd224, %rd149, %rd223;
	xor.b64  	%rd284, %rd224, %rd175;
	.loc	1 138 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd225, %rd149;
	and.b64  	%rd226, %rd141, %rd225;
	xor.b64  	%rd279, %rd147, %rd226;
	.loc	1 139 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd227, %rd141;
	and.b64  	%rd228, %rd131, %rd227;
	xor.b64  	%rd274, %rd149, %rd228;
	.loc	1 140 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd229, %rd131;
	and.b64  	%rd230, %rd175, %rd229;
	xor.b64  	%rd269, %rd141, %rd230;
	.loc	1 144 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd231, %rd165;
	and.b64  	%rd232, %rd173, %rd231;
	xor.b64  	%rd288, %rd232, %rd155;
	.loc	1 145 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd233, %rd173;
	and.b64  	%rd234, %rd171, %rd233;
	xor.b64  	%rd283, %rd234, %rd165;
	.loc	1 146 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd235, %rd171;
	and.b64  	%rd236, %rd151, %rd235;
	xor.b64  	%rd278, %rd173, %rd236;
	.loc	1 147 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd237, %rd151;
	and.b64  	%rd238, %rd155, %rd237;
	xor.b64  	%rd273, %rd171, %rd238;
	.loc	1 148 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd239, %rd155;
	and.b64  	%rd240, %rd165, %rd239;
	xor.b64  	%rd268, %rd151, %rd240;
	.loc	1 152 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd241, %rd161;
	and.b64  	%rd242, %rd139, %rd241;
	xor.b64  	%rd287, %rd242, %rd143;
	.loc	1 153 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd243, %rd139;
	and.b64  	%rd244, %rd153, %rd243;
	xor.b64  	%rd282, %rd244, %rd161;
	.loc	1 154 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd245, %rd153;
	and.b64  	%rd246, %rd159, %rd245;
	xor.b64  	%rd277, %rd139, %rd246;
	.loc	1 155 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd247, %rd159;
	and.b64  	%rd248, %rd143, %rd247;
	xor.b64  	%rd272, %rd153, %rd248;
	.loc	1 156 9, function_name $L__info_string1, inlined_at 1 276 9
	not.b64 	%rd249, %rd143;
	and.b64  	%rd250, %rd161, %rd249;
	xor.b64  	%rd267, %rd159, %rd250;
	.loc	1 161 9, function_name $L__info_string1, inlined_at 1 276 9
	mul.wide.s32 	%rd251, %r71, 8;
	mov.u64 	%rd252, CUDA_KECCAK_CONSTS;
	add.s64 	%rd253, %rd252, %rd251;
	ld.const.u64 	%rd254, [%rd253];
	xor.b64  	%rd291, %rd202, %rd254;
	.loc	1 50 29, function_name $L__info_string1, inlined_at 1 276 9
	add.s32 	%r71, %r71, 1;
	.loc	1 50 5, function_name $L__info_string1, inlined_at 1 276 9
	setp.ne.s32 	%p8, %r71, 24;
	@%p8 bra 	$L__BB2_8;

	.loc	1 0 5
	ld.param.u64 	%rd264, [kernel_lilypad_pow_debug_param_2];
	add.u64 	%rd263, %SP, 0;
	.loc	1 161 9, function_name $L__info_string1, inlined_at 1 276 9
	st.local.u64 	[%rd2], %rd291;
	.loc	1 133 9, function_name $L__info_string1, inlined_at 1 276 9
	st.local.u64 	[%rd2+40], %rd290;
	.loc	1 54 21, function_name $L__info_string1, inlined_at 1 276 9
	st.local.u64 	[%rd2+80], %rd289;
	st.local.u64 	[%rd2+120], %rd288;
	st.local.u64 	[%rd2+160], %rd287;
	.loc	1 126 9, function_name $L__info_string1, inlined_at 1 276 9
	st.local.u64 	[%rd2+8], %rd286;
	.loc	1 134 9, function_name $L__info_string1, inlined_at 1 276 9
	st.local.u64 	[%rd2+48], %rd285;
	.loc	1 55 21, function_name $L__info_string1, inlined_at 1 276 9
	st.local.u64 	[%rd2+88], %rd284;
	.loc	1 150 9, function_name $L__info_string1, inlined_at 1 276 9
	st.local.u64 	[%rd2+128], %rd283;
	.loc	1 55 21, function_name $L__info_string1, inlined_at 1 276 9
	st.local.u64 	[%rd2+168], %rd282;
	.loc	1 122 9, function_name $L__info_string1, inlined_at 1 276 9
	st.local.u64 	[%rd2+16], %rd281;
	.loc	1 130 9, function_name $L__info_string1, inlined_at 1 276 9
	st.local.u64 	[%rd2+56], %rd280;
	.loc	1 56 21, function_name $L__info_string1, inlined_at 1 276 9
	st.local.u64 	[%rd2+96], %rd279;
	st.local.u64 	[%rd2+136], %rd278;
	st.local.u64 	[%rd2+176], %rd277;
	.loc	1 123 9, function_name $L__info_string1, inlined_at 1 276 9
	st.local.u64 	[%rd2+24], %rd276;
	.loc	1 131 9, function_name $L__info_string1, inlined_at 1 276 9
	st.local.u64 	[%rd2+64], %rd275;
	.loc	1 57 21, function_name $L__info_string1, inlined_at 1 276 9
	st.local.u64 	[%rd2+104], %rd274;
	st.local.u64 	[%rd2+144], %rd273;
	st.local.u64 	[%rd2+184], %rd272;
	.loc	1 124 9, function_name $L__info_string1, inlined_at 1 276 9
	st.local.u64 	[%rd2+32], %rd271;
	.loc	1 58 21, function_name $L__info_string1, inlined_at 1 276 9
	st.local.u64 	[%rd2+72], %rd270;
	st.local.u64 	[%rd2+112], %rd269;
	st.local.u64 	[%rd2+152], %rd268;
	st.local.u64 	[%rd2+192], %rd267;
	.loc	1 279 13
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd263;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd264;
	.param .b32 retval0;
	call.uni (retval0), 
	_ZN39_INTERNAL_9445990f_9_keccak_cu_bbb2fa6e15hashbelowtargetEPKhS1_, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r62, [retval0+0];
	} // callseq 4
	cvt.u16.u32 	%rs74, %r62;
	setp.eq.s16 	%p9, %rs74, 0;
	@%p9 bra 	$L__BB2_14;

	.loc	1 0 13
	mov.u64 	%rd292, 0;

$L__BB2_11:
	add.s64 	%rd257, %rd2, %rd292;
	ld.local.u8 	%rs75, [%rd257];
	add.s64 	%rd258, %rd66, %rd292;
	st.global.u8 	[%rd258], %rs75;
	add.s64 	%rd292, %rd292, 1;
	setp.lt.u64 	%p10, %rd292, 32;
	@%p10 bra 	$L__BB2_11;

	mov.u64 	%rd293, 0;
	.loc	1 282 13
	st.global.u8 	[%rd260], %rs42;
	.loc	1 271 9
	shr.u16 	%rs76, %rs42, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+1], %rs76;
	st.global.u8 	[%rd260+2], %rs43;
	.loc	1 271 9
	shr.u16 	%rs77, %rs43, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+3], %rs77;
	st.global.u8 	[%rd260+4], %rs44;
	.loc	1 271 9
	shr.u16 	%rs78, %rs44, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+5], %rs78;
	st.global.u8 	[%rd260+6], %rs45;
	.loc	1 271 9
	shr.u16 	%rs79, %rs45, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+7], %rs79;
	st.global.u8 	[%rd260+8], %rs5;
	.loc	1 271 9
	shr.u16 	%rs80, %rs46, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+9], %rs80;
	st.global.u8 	[%rd260+10], %rs47;
	.loc	1 271 9
	shr.u16 	%rs81, %rs47, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+11], %rs81;
	st.global.u8 	[%rd260+12], %rs48;
	.loc	1 271 9
	shr.u16 	%rs82, %rs48, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+13], %rs82;
	st.global.u8 	[%rd260+14], %rs49;
	.loc	1 271 9
	shr.u16 	%rs83, %rs49, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+15], %rs83;
	st.global.u8 	[%rd260+16], %rs10;
	.loc	1 271 9
	shr.u16 	%rs84, %rs50, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+17], %rs84;
	st.global.u8 	[%rd260+18], %rs51;
	.loc	1 271 9
	shr.u16 	%rs85, %rs51, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+19], %rs85;
	st.global.u8 	[%rd260+20], %rs52;
	.loc	1 271 9
	shr.u16 	%rs86, %rs52, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+21], %rs86;
	st.global.u8 	[%rd260+22], %rs53;
	.loc	1 271 9
	shr.u16 	%rs87, %rs53, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+23], %rs87;
	st.global.u8 	[%rd260+24], %rs15;
	.loc	1 271 9
	shr.u16 	%rs88, %rs54, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+25], %rs88;
	st.global.u8 	[%rd260+26], %rs55;
	.loc	1 271 9
	shr.u16 	%rs89, %rs55, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+27], %rs89;
	st.global.u8 	[%rd260+28], %rs56;
	.loc	1 271 9
	shr.u16 	%rs90, %rs56, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+29], %rs90;
	st.global.u8 	[%rd260+30], %rs57;
	.loc	1 271 9
	shr.u16 	%rs91, %rs57, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+31], %rs91;
	st.global.u8 	[%rd260+32], %rs20;
	.loc	1 271 9
	shr.u16 	%rs92, %rs58, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+33], %rs92;
	st.global.u8 	[%rd260+34], %rs59;
	.loc	1 271 9
	shr.u16 	%rs93, %rs59, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+35], %rs93;
	st.global.u8 	[%rd260+36], %rs60;
	.loc	1 271 9
	shr.u16 	%rs94, %rs60, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+37], %rs94;
	st.global.u8 	[%rd260+38], %rs61;
	.loc	1 271 9
	shr.u16 	%rs95, %rs61, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+39], %rs95;
	st.global.u8 	[%rd260+40], %rs25;
	.loc	1 271 9
	shr.u16 	%rs96, %rs62, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+41], %rs96;
	st.global.u8 	[%rd260+42], %rs63;
	.loc	1 271 9
	shr.u16 	%rs97, %rs63, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+43], %rs97;
	st.global.u8 	[%rd260+44], %rs64;
	.loc	1 271 9
	shr.u16 	%rs98, %rs64, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+45], %rs98;
	st.global.u8 	[%rd260+46], %rs65;
	.loc	1 271 9
	shr.u16 	%rs99, %rs65, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+47], %rs99;
	st.global.u8 	[%rd260+48], %rs30;
	.loc	1 271 9
	shr.u16 	%rs100, %rs66, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+49], %rs100;
	st.global.u8 	[%rd260+50], %rs67;
	.loc	1 271 9
	shr.u16 	%rs101, %rs67, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+51], %rs101;
	st.global.u8 	[%rd260+52], %rs68;
	.loc	1 271 9
	shr.u16 	%rs102, %rs68, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+53], %rs102;
	st.global.u8 	[%rd260+54], %rs69;
	.loc	1 271 9
	shr.u16 	%rs103, %rs69, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+55], %rs103;
	st.global.u8 	[%rd260+56], %rs35;
	.loc	1 271 9
	shr.u16 	%rs104, %rs70, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+57], %rs104;
	st.global.u8 	[%rd260+58], %rs71;
	.loc	1 271 9
	shr.u16 	%rs105, %rs71, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+59], %rs105;
	st.global.u8 	[%rd260+60], %rs72;
	.loc	1 271 9
	shr.u16 	%rs106, %rs72, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+61], %rs106;
	st.global.u8 	[%rd260+62], %rs73;
	.loc	1 271 9
	shr.u16 	%rs107, %rs73, 8;
	.loc	1 282 13
	st.global.u8 	[%rd260+63], %rs107;

$L__BB2_13:
	.loc	1 0 13
	add.s64 	%rd261, %rd1, %rd293;
	ld.u8 	%rs108, [%rd261];
	add.s64 	%rd262, %rd69, %rd293;
	st.global.u8 	[%rd262], %rs108;
	add.s64 	%rd293, %rd293, 1;
	setp.lt.u64 	%p11, %rd293, 32;
	@%p11 bra 	$L__BB2_13;

$L__BB2_14:
	ld.param.u32 	%r68, [kernel_lilypad_pow_debug_param_4];
	.loc	1 286 9
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd1;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 5
	.loc	1 260 5
	mad.lo.s32 	%r67, %r1, %r68, %r68;
	.loc	1 260 76
	add.s32 	%r69, %r69, 1;
	.loc	1 260 5
	setp.lt.u32 	%p12, %r69, %r67;
	@%p12 bra 	$L__BB2_3;

$L__BB2_15:
	.loc	1 288 1
	ret;

}
	.file	1 "C:\\Users\\hunji\\code\\keccak_cu\\gpulib\\keccak.cu"
	.section	.debug_str
	{
$L__info_string0:
.b8 95,90,49,48,97,100,100,85,105,110,116,50,53,54,80,75,121,121,0
$L__info_string1:
.b8 95,90,78,51,57,95,73,78,84,69,82,78,65,76,95,57,52,52,53,57,57,48,102,95,57,95,107,101,99,99,97,107,95,99,117,95,98,98,98,50
.b8 102,97,54,101,50,52,99,117,100,97,95,107,101,99,99,97,107,95,112,101,114,109,117,116,97,116,105,111,110,115,69,80,121,0
$L__info_string2:
.b8 95,90,50,50,97,115,109,95,99,117,100,97,95,107,101,99,99,97,107,95,82,79,84,76,54,52,121,105,0

	}
